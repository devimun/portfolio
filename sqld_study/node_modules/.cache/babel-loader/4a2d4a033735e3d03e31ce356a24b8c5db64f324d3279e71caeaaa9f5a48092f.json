{"ast":null,"code":"var _jsxFileName = \"/Users/jun/Desktop/sqld_study/src/components/quiz/QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Quiz from \"./Quiz\";\nimport QuizResult from \"./QuizResult\";\nimport quizData from \"../../data/quizData\";\nimport MobileHeader, { MobileHeaderSpacer } from \"../layout/MobileHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n_c = QuizPageContainer;\nconst ContentContainer = styled.div`\n  width: 100%;\n  max-width: 800px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  \n  @media (max-width: 768px) {\n    padding: 16px;\n  }\n`;\n_c2 = ContentContainer;\nconst QuizPage = () => {\n  _s();\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(Array(quizData.length).fill(null));\n  const [answeredIds, setAnsweredIds] = useState([]);\n  const handleQuizComplete = (finalScore, answers) => {\n    setScore(finalScore);\n    setUserAnswers(answers);\n    const ids = [];\n    answers.forEach((answer, index) => {\n      if (answer !== null) {\n        ids.push(index);\n      }\n    });\n    setAnsweredIds(ids);\n    setIsQuizCompleted(true);\n  };\n  const handleRetry = () => {\n    setIsQuizCompleted(false);\n    setScore(0);\n    setUserAnswers(Array(quizData.length).fill(null));\n    setAnsweredIds([]);\n  };\n  return /*#__PURE__*/_jsxDEV(QuizPageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MobileHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileHeaderSpacer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: !isQuizCompleted ? /*#__PURE__*/_jsxDEV(Quiz, {\n        quizData: quizData,\n        onComplete: handleQuizComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(QuizResult, {\n        score: score,\n        totalQuestions: answeredIds.length,\n        userAnswers: userAnswers,\n        quizData: quizData,\n        answeredIds: answeredIds,\n        onRetry: handleRetry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"i0+8ZPWJyThNQrQawCp2e2k2N9w=\");\n_c3 = QuizPage;\nexport default QuizPage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"QuizPageContainer\");\n$RefreshReg$(_c2, \"ContentContainer\");\n$RefreshReg$(_c3, \"QuizPage\");","map":{"version":3,"names":["React","useState","styled","Quiz","QuizResult","quizData","MobileHeader","MobileHeaderSpacer","jsxDEV","_jsxDEV","QuizPageContainer","div","_c","ContentContainer","_c2","QuizPage","_s","isQuizCompleted","setIsQuizCompleted","score","setScore","userAnswers","setUserAnswers","Array","length","fill","answeredIds","setAnsweredIds","handleQuizComplete","finalScore","answers","ids","forEach","answer","index","push","handleRetry","children","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","totalQuestions","onRetry","_c3","$RefreshReg$"],"sources":["/Users/jun/Desktop/sqld_study/src/components/quiz/QuizPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Quiz from \"./Quiz\";\nimport QuizResult from \"./QuizResult\";\nimport quizData from \"../../data/quizData\";\nimport MobileHeader, { MobileHeaderSpacer } from \"../layout/MobileHeader\";\n\nconst QuizPageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst ContentContainer = styled.div`\n  width: 100%;\n  max-width: 800px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  \n  @media (max-width: 768px) {\n    padding: 16px;\n  }\n`;\n\nconst QuizPage = () => {\n  const [isQuizCompleted, setIsQuizCompleted] = useState(false);\n  const [score, setScore] = useState(0);\n  const [userAnswers, setUserAnswers] = useState(\n    Array(quizData.length).fill(null)\n  );\n  const [answeredIds, setAnsweredIds] = useState([]);\n\n  const handleQuizComplete = (finalScore, answers) => {\n    setScore(finalScore);\n    setUserAnswers(answers);\n\n    const ids = [];\n    answers.forEach((answer, index) => {\n      if (answer !== null) {\n        ids.push(index);\n      }\n    });\n    setAnsweredIds(ids);\n\n    setIsQuizCompleted(true);\n  };\n\n  const handleRetry = () => {\n    setIsQuizCompleted(false);\n    setScore(0);\n    setUserAnswers(Array(quizData.length).fill(null));\n    setAnsweredIds([]);\n  };\n\n  return (\n    <QuizPageContainer>\n      <MobileHeader />\n      <MobileHeaderSpacer />\n      <ContentContainer>\n        {!isQuizCompleted ? (\n          <Quiz quizData={quizData} onComplete={handleQuizComplete} />\n        ) : (\n          <QuizResult\n            score={score}\n            totalQuestions={answeredIds.length}\n            userAnswers={userAnswers}\n            quizData={quizData}\n            answeredIds={answeredIds}\n            onRetry={handleRetry}\n          />\n        )}\n      </ContentContainer>\n    </QuizPageContainer>\n  );\n};\n\nexport default QuizPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
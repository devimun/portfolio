{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jun/Desktop/sqld_study/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React from'react';import styled from'styled-components';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const TimerContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-family: 'IBM Plex Sans', sans-serif;\\n  font-size: 18px;\\n  font-weight: 700;\\n  color: \",\";\\n  background-color: rgba(215, 223, 228, 0.08);\\n  padding: 10px 16px;\\n  border-radius: 8px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  animation: \",\";\\n  box-shadow: \",\";\\n\\n  @keyframes pulse {\\n    0% {\\n      opacity: 1;\\n    }\\n    50% {\\n      opacity: 0.7;\\n    }\\n    100% {\\n      opacity: 1;\\n    }\\n  }\\n  \\n  @media (max-width: 768px) {\\n    font-size: 14px;\\n    padding: 6px 10px;\\n    \\n    /* MobileTopBar\\uC5D0\\uC11C \\uC0AC\\uC6A9\\uB418\\uB294 \\uACBD\\uC6B0 */\\n    \",\"\\n  }\\n\"])),props=>props.isLow?'#ff4d4d':'#d7dfe5',props=>props.isLow?'pulse 1s infinite':'none',props=>props.isLow?'0 0 10px rgba(255, 77, 77, 0.5)':'none',props=>props.isTopBar&&\"\\n      background-color: rgba(35, 149, 233, 0.4);\\n      font-size: 13px;\\n      padding: 5px 8px;\\n    \");// 모바일 타이머 디스플레이는 사이드바 전용으로 변경 (MobileTopBar와 중복을 피하기 위함)\nconst MobileTimerDisplay=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: none;\\n  \\n  @media (max-width: 768px) {\\n    display: \",\";\\n    position: fixed;\\n    top: 10px;\\n    right: 10px;\\n    z-index: 50;\\n    font-family: 'IBM Plex Sans', sans-serif;\\n    font-size: 14px;\\n    font-weight: 700;\\n    color: \",\";\\n    background-color: rgba(35, 149, 233, 0.6);\\n    padding: 6px 10px;\\n    border-radius: 6px;\\n    align-items: center;\\n    justify-content: center;\\n    animation: \",\";\\n    box-shadow: \",\";\\n  }\\n\"])),props=>props.sidebarVisible?'flex':'none',props=>props.isLow?'#ff4d4d':'#d7dfe5',props=>props.isLow?'pulse 1s infinite':'none',props=>props.isLow?'0 0 10px rgba(255, 77, 77, 0.5)':'none');const MockTestTimer=_ref=>{let{timeLeft,isTopBar,sidebarVisible}=_ref;// 남은 시간을 시:분:초 형태로 변환\nconst formatTime=seconds=>{const hours=Math.floor(seconds/3600);const minutes=Math.floor(seconds%3600/60);const secs=seconds%60;return\"\".concat(hours.toString().padStart(2,'0'),\":\").concat(minutes.toString().padStart(2,'0'),\":\").concat(secs.toString().padStart(2,'0'));};// 모바일용 타이머 포맷 (분:초 또는 시:분:초)\nconst formatMobileTime=seconds=>{const hours=Math.floor(seconds/3600);const minutes=Math.floor(seconds%3600/60);const secs=seconds%60;if(hours>0){return\"\".concat(hours,\":\").concat(minutes.toString().padStart(2,'0'),\":\").concat(secs.toString().padStart(2,'0'));}return\"\".concat(minutes,\":\").concat(secs.toString().padStart(2,'0'));};// 5분 이하일 때 경고 표시\nconst isTimeRunningLow=timeLeft<=300;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TimerContainer,{isLow:isTimeRunningLow,isTopBar:isTopBar,children:isTopBar?formatMobileTime(timeLeft):formatTime(timeLeft)}),/*#__PURE__*/_jsx(MobileTimerDisplay,{isLow:isTimeRunningLow,sidebarVisible:sidebarVisible,children:formatMobileTime(timeLeft)})]});};export default MockTestTimer;","map":{"version":3,"names":["React","styled","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","TimerContainer","div","_templateObject","_taggedTemplateLiteral","props","isLow","isTopBar","MobileTimerDisplay","_templateObject2","sidebarVisible","MockTestTimer","_ref","timeLeft","formatTime","seconds","hours","Math","floor","minutes","secs","concat","toString","padStart","formatMobileTime","isTimeRunningLow","children"],"sources":["/Users/jun/Desktop/sqld_study/src/components/mock_test/MockTestTimer.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst TimerContainer = styled.div`\n  font-family: 'IBM Plex Sans', sans-serif;\n  font-size: 18px;\n  font-weight: 700;\n  color: ${props => props.isLow ? '#ff4d4d' : '#d7dfe5'};\n  background-color: rgba(215, 223, 228, 0.08);\n  padding: 10px 16px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  animation: ${props => props.isLow ? 'pulse 1s infinite' : 'none'};\n  box-shadow: ${props => props.isLow ? '0 0 10px rgba(255, 77, 77, 0.5)' : 'none'};\n\n  @keyframes pulse {\n    0% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.7;\n    }\n    100% {\n      opacity: 1;\n    }\n  }\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n    padding: 6px 10px;\n    \n    /* MobileTopBar에서 사용되는 경우 */\n    ${props => props.isTopBar && `\n      background-color: rgba(35, 149, 233, 0.4);\n      font-size: 13px;\n      padding: 5px 8px;\n    `}\n  }\n`;\n\n// 모바일 타이머 디스플레이는 사이드바 전용으로 변경 (MobileTopBar와 중복을 피하기 위함)\nconst MobileTimerDisplay = styled.div`\n  display: none;\n  \n  @media (max-width: 768px) {\n    display: ${props => props.sidebarVisible ? 'flex' : 'none'};\n    position: fixed;\n    top: 10px;\n    right: 10px;\n    z-index: 50;\n    font-family: 'IBM Plex Sans', sans-serif;\n    font-size: 14px;\n    font-weight: 700;\n    color: ${props => props.isLow ? '#ff4d4d' : '#d7dfe5'};\n    background-color: rgba(35, 149, 233, 0.6);\n    padding: 6px 10px;\n    border-radius: 6px;\n    align-items: center;\n    justify-content: center;\n    animation: ${props => props.isLow ? 'pulse 1s infinite' : 'none'};\n    box-shadow: ${props => props.isLow ? '0 0 10px rgba(255, 77, 77, 0.5)' : 'none'};\n  }\n`;\n\nconst MockTestTimer = ({ timeLeft, isTopBar, sidebarVisible }) => {\n  // 남은 시간을 시:분:초 형태로 변환\n  const formatTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  \n  // 모바일용 타이머 포맷 (분:초 또는 시:분:초)\n  const formatMobileTime = (seconds) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n\n    if (hours > 0) {\n      return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n    }\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  // 5분 이하일 때 경고 표시\n  const isTimeRunningLow = timeLeft <= 300;\n\n  return (\n    <>\n      <TimerContainer isLow={isTimeRunningLow} isTopBar={isTopBar}>\n        {isTopBar ? formatMobileTime(timeLeft) : formatTime(timeLeft)}\n      </TimerContainer>\n      \n      <MobileTimerDisplay isLow={isTimeRunningLow} sidebarVisible={sidebarVisible}>\n        {formatMobileTime(timeLeft)}\n      </MobileTimerDisplay>\n    </>\n  );\n};\n\nexport default MockTestTimer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
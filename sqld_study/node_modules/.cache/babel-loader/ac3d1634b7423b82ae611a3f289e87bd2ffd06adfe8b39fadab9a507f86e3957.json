{"ast":null,"code":"var _jsxFileName = \"/Users/jun/Desktop/sqld_study/src/components/mock_test/MockTestPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/** @format */\n\nimport styled from \"styled-components\";\nimport { exam1, exam2 } from \"../../data/mock_exam\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MockTestSidebar from \"./MockTestSidebar\";\nimport QuestionDisplay from \"./QuestionDisplay\";\nimport MockTestTimer from \"./MockTestTimer\";\nimport MobileHeader, { MobileHeaderSpacer } from \"../layout/MobileHeader\";\nimport MockTestResults from \"./MockTestResults\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MockTestPageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  position: relative;\n`;\n_c = MockTestPageContainer;\nconst TestSelectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n_c2 = TestSelectionContainer;\nconst TestSelectionHeading = styled.h1`\n  color: #d7dfe5;\n  margin-bottom: 30px;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    font-size: 24px;\n    margin-bottom: 20px;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 20px;\n  }\n`;\n_c3 = TestSelectionHeading;\nconst TestRouteBtn = styled.button`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-weight: 500;\n  font-size: 15px;\n  color: #d7dfe5;\n  padding: 12px 24px;\n  background-color: transparent;\n  border: 1.5px solid rgba(214, 224, 230, 0.2);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin: 10px;\n  width: 200px;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.4);\n  }\n\n  @media (max-width: 768px) {\n    width: 90%;\n    max-width: 280px;\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n`;\n_c4 = TestRouteBtn;\nconst StartButton = styled(TestRouteBtn)`\n  background-color: rgba(35, 149, 233, 0.6);\n  margin-top: 30px;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.8);\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 20px;\n  }\n`;\n_c5 = StartButton;\nconst TestContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n_c6 = TestContainer;\nconst ContentContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  transition: margin-left 0.3s ease;\n  margin-left: ${props => props.sidebarVisible ? \"350px\" : \"0\"};\n\n  @media (max-width: 1200px) {\n    padding: 16px;\n    margin-left: ${props => props.sidebarVisible ? \"350px\" : \"0\"};\n  }\n\n  @media (max-width: 768px) {\n    padding: 16px 12px;\n    margin-left: 0;\n    padding-top: 120px; /* 모바일 탑바 아래 추가 패딩 */\n  }\n`;\n_c7 = ContentContainer;\nconst ShowSidebarButton = styled.button`\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  background-color: rgba(35, 149, 233, 0.4);\n  color: #d7dfe5;\n  border: none;\n  border-radius: 8px;\n  padding: 10px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  z-index: 50;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-weight: 500;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.6);\n  }\n\n  svg {\n    margin-right: 8px;\n  }\n\n  @media (max-width: 768px) {\n    top: 10px;\n    left: 10px;\n    padding: 8px 12px;\n    font-size: 14px;\n  }\n`;\n_c8 = ShowSidebarButton;\nconst MobileTopBar = styled.div`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: flex;\n    position: fixed;\n    top: 103px; /* MobileHeader 높이와 일치 */\n    left: 0;\n    width: 100%;\n    background-color: #081017;\n    border-bottom: 1px solid rgba(214, 224, 230, 0.1);\n    padding: 10px;\n    z-index: 90; /* MobileHeader보다 낮은 z-index */\n    flex-direction: column;\n    height: auto; /* 높이 자동 조정으로 변경 */\n    min-height: 60px; /* 최소 높이 설정 */\n    box-sizing: border-box;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* 그림자 추가로 가시성 향상 */\n  }\n`;\n_c9 = MobileTopBar;\nconst MobileTopBarContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n`;\n_c0 = MobileTopBarContent;\nconst MobileQuestionScroller = styled.div`\n  display: flex;\n  overflow-x: auto;\n  padding: 10px 5px;\n  margin-top: 8px;\n  gap: 6px;\n  width: 100%;\n\n  /* 스크롤바 숨기기 */\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n\n  &::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera */\n  }\n`;\n_c1 = MobileQuestionScroller;\nconst MobileQuestionDot = styled.button`\n  min-width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${props => props.isCurrent ? \"rgba(35, 149, 233, 0.7)\" : props.isAnswered ? \"rgba(60, 179, 113, 0.4)\" : \"rgba(215, 223, 228, 0.08)\"};\n  border-radius: 18px;\n  color: #d7dfe5;\n  font-weight: 600;\n  font-size: 14px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-family: \"IBM Plex Sans\", sans-serif;\n`;\n_c10 = MobileQuestionDot;\nconst MobileTestTitle = styled.div`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  color: #d7dfe5;\n  font-weight: 600;\n  font-size: 14px;\n`;\n\n// MobileTopBar 높이만큼 공간을 확보하는 스페이서\n_c11 = MobileTestTitle;\nconst MobileTopBarSpacer = styled.div`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n    height: auto; /* 자동 높이로 변경 */\n    min-height: 120px; /* 모바일 탑바 높이를 충분히 확보하기 위해 증가 */\n  }\n`;\n_c12 = MobileTopBarSpacer;\nconst ResultContainer = styled.div`\n  width: 100%;\n  padding: 20px;\n  background-color: rgba(12, 20, 28, 0.5);\n  border-radius: 12px;\n  margin-top: 20px;\n  color: #d7dfe5;\n  font-family: \"IBM Plex Sans\", sans-serif;\n\n  h2 {\n    color: #2395e9;\n    margin-bottom: 15px;\n    font-weight: 700;\n  }\n\n  p {\n    margin-bottom: 8px;\n    padding: 8px;\n    border-radius: 6px;\n\n    &:hover {\n      background: rgba(215, 223, 228, 0.05);\n    }\n  }\n\n  @media (max-width: 768px) {\n    padding: 16px;\n    margin-top: 16px;\n\n    h2 {\n      font-size: 18px;\n      margin-bottom: 12px;\n    }\n\n    p {\n      font-size: 14px;\n      margin-bottom: 6px;\n      padding: 6px;\n    }\n  }\n`;\n\n// 모바일 환경 감지 hook 추가\n_c13 = ResultContainer;\nconst useMobileDetection = () => {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => window.removeEventListener(\"resize\", checkMobile);\n  }, []);\n  return isMobile;\n};\n_s(useMobileDetection, \"0VTTNJATKABQPGLm9RVT0tKGUgU=\");\nconst MockTestPage = () => {\n  _s2();\n  const testList = [exam1, exam2];\n  const [selectedTest, setSelectedTest] = useState(null);\n  const [activeTest, setActiveTest] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(90 * 60); // 90분을 초 단위로\n  const [testFinished, setTestFinished] = useState(false);\n  const [showResultsPage, setShowResultsPage] = useState(false);\n  const timerRef = useRef(null);\n  const mobileQuestionScrollRef = useRef(null);\n\n  // 모바일 감지 추가\n  const isMobile = useMobileDetection();\n\n  // 시험 시작 함수\n  const startTest = () => {\n    if (selectedTest) {\n      setActiveTest(selectedTest);\n      setUserAnswers(new Array(selectedTest.length).fill(null));\n      setTestFinished(false);\n      setShowResultsPage(false);\n\n      // 타이머 시작\n      timerRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            clearInterval(timerRef.current);\n            setTestFinished(true);\n            setShowResultsPage(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n  };\n\n  // 컴포넌트 언마운트 시 타이머 정리\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  // 모바일 뷰에서 사이드바 표시 시 스크롤 방지\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 768 && sidebarVisible) {\n        document.body.style.overflow = \"hidden\";\n      } else {\n        document.body.style.overflow = \"auto\";\n      }\n    };\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      document.body.style.overflow = \"auto\";\n    };\n  }, [sidebarVisible]);\n\n  // 모바일 문제 스크롤러에서 현재 문제가 보이도록 스크롤 조정\n  useEffect(() => {\n    if (mobileQuestionScrollRef.current && window.innerWidth <= 768) {\n      const scrollContainer = mobileQuestionScrollRef.current;\n      const selectedElement = scrollContainer.children[currentQuestion];\n      if (selectedElement) {\n        const containerWidth = scrollContainer.offsetWidth;\n        const elementLeft = selectedElement.offsetLeft;\n        const elementWidth = selectedElement.offsetWidth;\n\n        // 중앙 정렬 스크롤 계산\n        const scrollPosition = elementLeft - containerWidth / 2 + elementWidth / 2;\n        scrollContainer.scrollTo({\n          left: scrollPosition,\n          behavior: \"smooth\"\n        });\n      }\n    }\n  }, [currentQuestion]);\n\n  // 답안 선택 함수\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newAnswers = [...userAnswers];\n    newAnswers[questionIndex] = answerIndex;\n    setUserAnswers(newAnswers);\n  };\n\n  // 문제 이동 함수\n  const goToQuestion = index => {\n    setCurrentQuestion(index);\n\n    // 모바일에서 문제 선택 시 사이드바 닫기\n    if (window.innerWidth <= 768) {\n      setSidebarVisible(false);\n    }\n  };\n\n  // 시험 제출 함수\n  const submitTest = () => {\n    clearInterval(timerRef.current);\n    setTestFinished(true);\n    setShowResultsPage(true);\n  };\n\n  // 모의고사 선택 화면으로 돌아가기\n  const handleReturnToSelection = () => {\n    setActiveTest(null);\n    setSelectedTest(null);\n    setTimeLeft(90 * 60);\n    setTestFinished(false);\n    setShowResultsPage(false);\n  };\n\n  // 사이드바 토글 함수\n  const toggleSidebar = () => {\n    // 모바일에서는 사이드바 토글이 필요 없으므로 데스크탑에서만 동작\n    if (!isMobile) {\n      setSidebarVisible(!sidebarVisible);\n    }\n  };\n\n  // 시험 결과 계산\n  const calculateResults = () => {\n    if (!testFinished || !activeTest) return null;\n    let correctCount = 0;\n    activeTest.forEach((question, idx) => {\n      if (userAnswers[idx] === question.answer) {\n        correctCount++;\n      }\n    });\n    return {\n      totalQuestions: activeTest.length,\n      correctAnswers: correctCount,\n      score: Math.round(correctCount / activeTest.length * 100)\n    };\n  };\n  const results = calculateResults();\n  if (!activeTest) {\n    return /*#__PURE__*/_jsxDEV(MockTestPageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MobileHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MobileHeaderSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TestSelectionContainer, {\n        children: [/*#__PURE__*/_jsxDEV(TestSelectionHeading, {\n          children: \"\\uC2E4\\uC804 \\uBAA8\\uC758\\uACE0\\uC0AC \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), testList.map((exam, idx) => /*#__PURE__*/_jsxDEV(TestRouteBtn, {\n          onClick: () => setSelectedTest(exam),\n          style: selectedTest === exam ? {\n            backgroundColor: \"rgba(35, 149, 233, 0.4)\"\n          } : {},\n          children: `${idx + 1}회 실전 모의고사`\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }, this)), selectedTest && /*#__PURE__*/_jsxDEV(StartButton, {\n          onClick: startTest,\n          children: \"\\uBAA8\\uC758\\uACE0\\uC0AC \\uC2DC\\uC791\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this);\n  }\n\n  // 결과 페이지 표시\n  if (testFinished && showResultsPage && results) {\n    return /*#__PURE__*/_jsxDEV(MockTestPageContainer, {\n      children: [/*#__PURE__*/_jsxDEV(MobileHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MobileHeaderSpacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n        sidebarVisible: false,\n        children: /*#__PURE__*/_jsxDEV(MockTestResults, {\n          questions: activeTest,\n          userAnswers: userAnswers,\n          totalQuestions: results.totalQuestions,\n          correctAnswers: results.correctAnswers,\n          score: results.score,\n          onReturnToSelection: handleReturnToSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(MockTestPageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MobileHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobileHeaderSpacer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestContainer, {\n      children: [!isMobile && sidebarVisible ? /*#__PURE__*/_jsxDEV(MockTestSidebar, {\n        questions: activeTest,\n        currentQuestion: currentQuestion,\n        userAnswers: userAnswers,\n        goToQuestion: goToQuestion,\n        testNumber: testList.indexOf(activeTest) + 1,\n        timeLeft: timeLeft,\n        toggleSidebar: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 11\n      }, this) : !isMobile && /*#__PURE__*/_jsxDEV(ShowSidebarButton, {\n        onClick: toggleSidebar,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"16\",\n          height: \"16\",\n          viewBox: \"0 0 16 16\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M1 4C1 2.34315 2.34315 1 4 1H12C13.6569 1 15 2.34315 15 4V12C15 13.6569 13.6569 15 12 15H4C2.34315 15 1 13.6569 1 12V4Z\",\n            stroke: \"currentColor\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M5 1V15\",\n            stroke: \"currentColor\",\n            strokeWidth: \"1.5\",\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 15\n        }, this), \"\\uC0AC\\uC774\\uB4DC\\uBC14 \\uD45C\\uC2DC\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 13\n      }, this), isMobile && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(MobileTopBar, {\n          children: [/*#__PURE__*/_jsxDEV(MobileTopBarContent, {\n            children: [/*#__PURE__*/_jsxDEV(MobileTestTitle, {\n              children: [\"\\uC2E4\\uC804 \\uBAA8\\uC758\\uACE0\\uC0AC \", testList.indexOf(activeTest) + 1, \"\\uD68C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(MockTestTimer, {\n              timeLeft: timeLeft,\n              isTopBar: true,\n              sidebarVisible: false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(MobileQuestionScroller, {\n            ref: mobileQuestionScrollRef,\n            children: activeTest.map((_, index) => /*#__PURE__*/_jsxDEV(MobileQuestionDot, {\n              isCurrent: index === currentQuestion,\n              isAnswered: userAnswers[index] !== null,\n              onClick: () => goToQuestion(index),\n              children: index + 1\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MobileTopBarSpacer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(ContentContainer, {\n        sidebarVisible: !isMobile && sidebarVisible,\n        children: [/*#__PURE__*/_jsxDEV(QuestionDisplay, {\n          question: activeTest[currentQuestion],\n          questionIndex: currentQuestion,\n          totalQuestions: activeTest.length,\n          selectedAnswer: userAnswers[currentQuestion],\n          onAnswerSelect: answer => handleAnswerSelect(currentQuestion, answer),\n          onPrevious: () => currentQuestion > 0 && setCurrentQuestion(currentQuestion - 1),\n          onNext: () => currentQuestion < activeTest.length - 1 && setCurrentQuestion(currentQuestion + 1),\n          onSubmit: submitTest,\n          isLast: currentQuestion === activeTest.length - 1,\n          testFinished: testFinished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this), testFinished && !showResultsPage && results && /*#__PURE__*/_jsxDEV(ResultContainer, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"\\uBAA8\\uC758\\uACE0\\uC0AC \\uACB0\\uACFC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uCD1D \\uBB38\\uD56D \\uC218: \", results.totalQuestions, \"\\uAC1C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC815\\uB2F5 \\uC218: \", results.correctAnswers, \"\\uAC1C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC810\\uC218: \", results.score, \"\\uC810\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 495,\n    columnNumber: 5\n  }, this);\n};\n_s2(MockTestPage, \"/5v+YJvMouiQTv2lgJJpqQRLwmE=\", false, function () {\n  return [useMobileDetection];\n});\n_c14 = MockTestPage;\nexport default MockTestPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14;\n$RefreshReg$(_c, \"MockTestPageContainer\");\n$RefreshReg$(_c2, \"TestSelectionContainer\");\n$RefreshReg$(_c3, \"TestSelectionHeading\");\n$RefreshReg$(_c4, \"TestRouteBtn\");\n$RefreshReg$(_c5, \"StartButton\");\n$RefreshReg$(_c6, \"TestContainer\");\n$RefreshReg$(_c7, \"ContentContainer\");\n$RefreshReg$(_c8, \"ShowSidebarButton\");\n$RefreshReg$(_c9, \"MobileTopBar\");\n$RefreshReg$(_c0, \"MobileTopBarContent\");\n$RefreshReg$(_c1, \"MobileQuestionScroller\");\n$RefreshReg$(_c10, \"MobileQuestionDot\");\n$RefreshReg$(_c11, \"MobileTestTitle\");\n$RefreshReg$(_c12, \"MobileTopBarSpacer\");\n$RefreshReg$(_c13, \"ResultContainer\");\n$RefreshReg$(_c14, \"MockTestPage\");","map":{"version":3,"names":["styled","exam1","exam2","useState","useEffect","useRef","MockTestSidebar","QuestionDisplay","MockTestTimer","MobileHeader","MobileHeaderSpacer","MockTestResults","jsxDEV","_jsxDEV","Fragment","_Fragment","MockTestPageContainer","div","_c","TestSelectionContainer","_c2","TestSelectionHeading","h1","_c3","TestRouteBtn","button","_c4","StartButton","_c5","TestContainer","_c6","ContentContainer","props","sidebarVisible","_c7","ShowSidebarButton","_c8","MobileTopBar","_c9","MobileTopBarContent","_c0","MobileQuestionScroller","_c1","MobileQuestionDot","isCurrent","isAnswered","_c10","MobileTestTitle","_c11","MobileTopBarSpacer","_c12","ResultContainer","_c13","useMobileDetection","_s","isMobile","setIsMobile","checkMobile","window","innerWidth","addEventListener","removeEventListener","MockTestPage","_s2","testList","selectedTest","setSelectedTest","activeTest","setActiveTest","currentQuestion","setCurrentQuestion","userAnswers","setUserAnswers","setSidebarVisible","timeLeft","setTimeLeft","testFinished","setTestFinished","showResultsPage","setShowResultsPage","timerRef","mobileQuestionScrollRef","startTest","Array","length","fill","current","setInterval","prev","clearInterval","handleResize","document","body","style","overflow","scrollContainer","selectedElement","children","containerWidth","offsetWidth","elementLeft","offsetLeft","elementWidth","scrollPosition","scrollTo","left","behavior","handleAnswerSelect","questionIndex","answerIndex","newAnswers","goToQuestion","index","submitTest","handleReturnToSelection","toggleSidebar","calculateResults","correctCount","forEach","question","idx","answer","totalQuestions","correctAnswers","score","Math","round","results","fileName","_jsxFileName","lineNumber","columnNumber","map","exam","onClick","backgroundColor","questions","onReturnToSelection","testNumber","indexOf","width","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","isTopBar","ref","_","selectedAnswer","onAnswerSelect","onPrevious","onNext","onSubmit","isLast","_c14","$RefreshReg$"],"sources":["/Users/jun/Desktop/sqld_study/src/components/mock_test/MockTestPage.js"],"sourcesContent":["/** @format */\n\nimport styled from \"styled-components\";\nimport {exam1, exam2} from \"../../data/mock_exam\";\nimport {useState, useEffect, useRef} from \"react\";\nimport MockTestSidebar from \"./MockTestSidebar\";\nimport QuestionDisplay from \"./QuestionDisplay\";\nimport MockTestTimer from \"./MockTestTimer\";\nimport MobileHeader, {MobileHeaderSpacer} from \"../layout/MobileHeader\";\nimport MockTestResults from \"./MockTestResults\";\n\nconst MockTestPageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  position: relative;\n`;\n\nconst TestSelectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst TestSelectionHeading = styled.h1`\n  color: #d7dfe5;\n  margin-bottom: 30px;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    font-size: 24px;\n    margin-bottom: 20px;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 20px;\n  }\n`;\n\nconst TestRouteBtn = styled.button`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-weight: 500;\n  font-size: 15px;\n  color: #d7dfe5;\n  padding: 12px 24px;\n  background-color: transparent;\n  border: 1.5px solid rgba(214, 224, 230, 0.2);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin: 10px;\n  width: 200px;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.4);\n  }\n\n  @media (max-width: 768px) {\n    width: 90%;\n    max-width: 280px;\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst StartButton = styled(TestRouteBtn)`\n  background-color: rgba(35, 149, 233, 0.6);\n  margin-top: 30px;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.8);\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 20px;\n  }\n`;\n\nconst TestContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  transition: margin-left 0.3s ease;\n  margin-left: ${(props) => (props.sidebarVisible ? \"350px\" : \"0\")};\n\n  @media (max-width: 1200px) {\n    padding: 16px;\n    margin-left: ${(props) => (props.sidebarVisible ? \"350px\" : \"0\")};\n  }\n\n  @media (max-width: 768px) {\n    padding: 16px 12px;\n    margin-left: 0;\n    padding-top: 120px; /* 모바일 탑바 아래 추가 패딩 */\n  }\n`;\n\nconst ShowSidebarButton = styled.button`\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  background-color: rgba(35, 149, 233, 0.4);\n  color: #d7dfe5;\n  border: none;\n  border-radius: 8px;\n  padding: 10px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  z-index: 50;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-weight: 500;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.6);\n  }\n\n  svg {\n    margin-right: 8px;\n  }\n\n  @media (max-width: 768px) {\n    top: 10px;\n    left: 10px;\n    padding: 8px 12px;\n    font-size: 14px;\n  }\n`;\n\nconst MobileTopBar = styled.div`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: flex;\n    position: fixed;\n    top: 103px; /* MobileHeader 높이와 일치 */\n    left: 0;\n    width: 100%;\n    background-color: #081017;\n    border-bottom: 1px solid rgba(214, 224, 230, 0.1);\n    padding: 10px;\n    z-index: 90; /* MobileHeader보다 낮은 z-index */\n    flex-direction: column;\n    height: auto; /* 높이 자동 조정으로 변경 */\n    min-height: 60px; /* 최소 높이 설정 */\n    box-sizing: border-box;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* 그림자 추가로 가시성 향상 */\n  }\n`;\n\nconst MobileTopBarContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n`;\n\nconst MobileQuestionScroller = styled.div`\n  display: flex;\n  overflow-x: auto;\n  padding: 10px 5px;\n  margin-top: 8px;\n  gap: 6px;\n  width: 100%;\n\n  /* 스크롤바 숨기기 */\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n\n  &::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera */\n  }\n`;\n\nconst MobileQuestionDot = styled.button`\n  min-width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${(props) =>\n    props.isCurrent\n      ? \"rgba(35, 149, 233, 0.7)\"\n      : props.isAnswered\n      ? \"rgba(60, 179, 113, 0.4)\"\n      : \"rgba(215, 223, 228, 0.08)\"};\n  border-radius: 18px;\n  color: #d7dfe5;\n  font-weight: 600;\n  font-size: 14px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-family: \"IBM Plex Sans\", sans-serif;\n`;\n\nconst MobileTestTitle = styled.div`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  color: #d7dfe5;\n  font-weight: 600;\n  font-size: 14px;\n`;\n\n// MobileTopBar 높이만큼 공간을 확보하는 스페이서\nconst MobileTopBarSpacer = styled.div`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n    height: auto; /* 자동 높이로 변경 */\n    min-height: 120px; /* 모바일 탑바 높이를 충분히 확보하기 위해 증가 */\n  }\n`;\n\nconst ResultContainer = styled.div`\n  width: 100%;\n  padding: 20px;\n  background-color: rgba(12, 20, 28, 0.5);\n  border-radius: 12px;\n  margin-top: 20px;\n  color: #d7dfe5;\n  font-family: \"IBM Plex Sans\", sans-serif;\n\n  h2 {\n    color: #2395e9;\n    margin-bottom: 15px;\n    font-weight: 700;\n  }\n\n  p {\n    margin-bottom: 8px;\n    padding: 8px;\n    border-radius: 6px;\n\n    &:hover {\n      background: rgba(215, 223, 228, 0.05);\n    }\n  }\n\n  @media (max-width: 768px) {\n    padding: 16px;\n    margin-top: 16px;\n\n    h2 {\n      font-size: 18px;\n      margin-bottom: 12px;\n    }\n\n    p {\n      font-size: 14px;\n      margin-bottom: 6px;\n      padding: 6px;\n    }\n  }\n`;\n\n// 모바일 환경 감지 hook 추가\nconst useMobileDetection = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => window.removeEventListener(\"resize\", checkMobile);\n  }, []);\n\n  return isMobile;\n};\n\nconst MockTestPage = () => {\n  const testList = [exam1, exam2];\n  const [selectedTest, setSelectedTest] = useState(null);\n  const [activeTest, setActiveTest] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(90 * 60); // 90분을 초 단위로\n  const [testFinished, setTestFinished] = useState(false);\n  const [showResultsPage, setShowResultsPage] = useState(false);\n\n  const timerRef = useRef(null);\n  const mobileQuestionScrollRef = useRef(null);\n\n  // 모바일 감지 추가\n  const isMobile = useMobileDetection();\n\n  // 시험 시작 함수\n  const startTest = () => {\n    if (selectedTest) {\n      setActiveTest(selectedTest);\n      setUserAnswers(new Array(selectedTest.length).fill(null));\n      setTestFinished(false);\n      setShowResultsPage(false);\n\n      // 타이머 시작\n      timerRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            clearInterval(timerRef.current);\n            setTestFinished(true);\n            setShowResultsPage(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n  };\n\n  // 컴포넌트 언마운트 시 타이머 정리\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  // 모바일 뷰에서 사이드바 표시 시 스크롤 방지\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 768 && sidebarVisible) {\n        document.body.style.overflow = \"hidden\";\n      } else {\n        document.body.style.overflow = \"auto\";\n      }\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      document.body.style.overflow = \"auto\";\n    };\n  }, [sidebarVisible]);\n\n  // 모바일 문제 스크롤러에서 현재 문제가 보이도록 스크롤 조정\n  useEffect(() => {\n    if (mobileQuestionScrollRef.current && window.innerWidth <= 768) {\n      const scrollContainer = mobileQuestionScrollRef.current;\n      const selectedElement = scrollContainer.children[currentQuestion];\n\n      if (selectedElement) {\n        const containerWidth = scrollContainer.offsetWidth;\n        const elementLeft = selectedElement.offsetLeft;\n        const elementWidth = selectedElement.offsetWidth;\n\n        // 중앙 정렬 스크롤 계산\n        const scrollPosition =\n          elementLeft - containerWidth / 2 + elementWidth / 2;\n        scrollContainer.scrollTo({\n          left: scrollPosition,\n          behavior: \"smooth\",\n        });\n      }\n    }\n  }, [currentQuestion]);\n\n  // 답안 선택 함수\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newAnswers = [...userAnswers];\n    newAnswers[questionIndex] = answerIndex;\n    setUserAnswers(newAnswers);\n  };\n\n  // 문제 이동 함수\n  const goToQuestion = (index) => {\n    setCurrentQuestion(index);\n\n    // 모바일에서 문제 선택 시 사이드바 닫기\n    if (window.innerWidth <= 768) {\n      setSidebarVisible(false);\n    }\n  };\n\n  // 시험 제출 함수\n  const submitTest = () => {\n    clearInterval(timerRef.current);\n    setTestFinished(true);\n    setShowResultsPage(true);\n  };\n\n  // 모의고사 선택 화면으로 돌아가기\n  const handleReturnToSelection = () => {\n    setActiveTest(null);\n    setSelectedTest(null);\n    setTimeLeft(90 * 60);\n    setTestFinished(false);\n    setShowResultsPage(false);\n  };\n\n  // 사이드바 토글 함수\n  const toggleSidebar = () => {\n    // 모바일에서는 사이드바 토글이 필요 없으므로 데스크탑에서만 동작\n    if (!isMobile) {\n      setSidebarVisible(!sidebarVisible);\n    }\n  };\n\n  // 시험 결과 계산\n  const calculateResults = () => {\n    if (!testFinished || !activeTest) return null;\n\n    let correctCount = 0;\n    activeTest.forEach((question, idx) => {\n      if (userAnswers[idx] === question.answer) {\n        correctCount++;\n      }\n    });\n\n    return {\n      totalQuestions: activeTest.length,\n      correctAnswers: correctCount,\n      score: Math.round((correctCount / activeTest.length) * 100),\n    };\n  };\n\n  const results = calculateResults();\n\n  if (!activeTest) {\n    return (\n      <MockTestPageContainer>\n        <MobileHeader />\n        <MobileHeaderSpacer />\n        <TestSelectionContainer>\n          <TestSelectionHeading>실전 모의고사 선택</TestSelectionHeading>\n          {testList.map((exam, idx) => (\n            <TestRouteBtn\n              key={idx}\n              onClick={() => setSelectedTest(exam)}\n              style={\n                selectedTest === exam\n                  ? {backgroundColor: \"rgba(35, 149, 233, 0.4)\"}\n                  : {}\n              }\n            >\n              {`${idx + 1}회 실전 모의고사`}\n            </TestRouteBtn>\n          ))}\n          {selectedTest && (\n            <StartButton onClick={startTest}>모의고사 시작하기</StartButton>\n          )}\n        </TestSelectionContainer>\n      </MockTestPageContainer>\n    );\n  }\n\n  // 결과 페이지 표시\n  if (testFinished && showResultsPage && results) {\n    return (\n      <MockTestPageContainer>\n        <MobileHeader />\n        <MobileHeaderSpacer />\n        <ContentContainer sidebarVisible={false}>\n          <MockTestResults\n            questions={activeTest}\n            userAnswers={userAnswers}\n            totalQuestions={results.totalQuestions}\n            correctAnswers={results.correctAnswers}\n            score={results.score}\n            onReturnToSelection={handleReturnToSelection}\n          />\n        </ContentContainer>\n      </MockTestPageContainer>\n    );\n  }\n\n  return (\n    <MockTestPageContainer>\n      <MobileHeader />\n      <MobileHeaderSpacer />\n      <TestContainer>\n        {/* 데스크탑 모드에서만 사이드바 표시 */}\n        {!isMobile && sidebarVisible ? (\n          <MockTestSidebar\n            questions={activeTest}\n            currentQuestion={currentQuestion}\n            userAnswers={userAnswers}\n            goToQuestion={goToQuestion}\n            testNumber={testList.indexOf(activeTest) + 1}\n            timeLeft={timeLeft}\n            toggleSidebar={toggleSidebar}\n          />\n        ) : (\n          !isMobile && (\n            <ShowSidebarButton onClick={toggleSidebar}>\n              <svg\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 16 16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M1 4C1 2.34315 2.34315 1 4 1H12C13.6569 1 15 2.34315 15 4V12C15 13.6569 13.6569 15 12 15H4C2.34315 15 1 13.6569 1 12V4Z\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"1.5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M5 1V15\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"1.5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              사이드바 표시\n            </ShowSidebarButton>\n          )\n        )}\n\n        {/* 모바일 모드에서는 항상 탑바 표시 */}\n        {isMobile && (\n          <>\n            {/* 모바일 전용 상단 바 */}\n            <MobileTopBar>\n              <MobileTopBarContent>\n                <MobileTestTitle>\n                  실전 모의고사 {testList.indexOf(activeTest) + 1}회\n                </MobileTestTitle>\n                <MockTestTimer\n                  timeLeft={timeLeft}\n                  isTopBar={true}\n                  sidebarVisible={false}\n                />\n              </MobileTopBarContent>\n\n              <MobileQuestionScroller ref={mobileQuestionScrollRef}>\n                {activeTest.map((_, index) => (\n                  <MobileQuestionDot\n                    key={index}\n                    isCurrent={index === currentQuestion}\n                    isAnswered={userAnswers[index] !== null}\n                    onClick={() => goToQuestion(index)}\n                  >\n                    {index + 1}\n                  </MobileQuestionDot>\n                ))}\n              </MobileQuestionScroller>\n            </MobileTopBar>\n            <MobileTopBarSpacer />\n          </>\n        )}\n\n        <ContentContainer sidebarVisible={!isMobile && sidebarVisible}>\n          <QuestionDisplay\n            question={activeTest[currentQuestion]}\n            questionIndex={currentQuestion}\n            totalQuestions={activeTest.length}\n            selectedAnswer={userAnswers[currentQuestion]}\n            onAnswerSelect={(answer) =>\n              handleAnswerSelect(currentQuestion, answer)\n            }\n            onPrevious={() =>\n              currentQuestion > 0 && setCurrentQuestion(currentQuestion - 1)\n            }\n            onNext={() =>\n              currentQuestion < activeTest.length - 1 &&\n              setCurrentQuestion(currentQuestion + 1)\n            }\n            onSubmit={submitTest}\n            isLast={currentQuestion === activeTest.length - 1}\n            testFinished={testFinished}\n          />\n\n          {testFinished && !showResultsPage && results && (\n            <ResultContainer>\n              <h2>모의고사 결과</h2>\n              <p>총 문항 수: {results.totalQuestions}개</p>\n              <p>정답 수: {results.correctAnswers}개</p>\n              <p>점수: {results.score}점</p>\n            </ResultContainer>\n          )}\n        </ContentContainer>\n      </TestContainer>\n    </MockTestPageContainer>\n  );\n};\n\nexport default MockTestPage;\n"],"mappings":";;;AAAA;;AAEA,OAAOA,MAAM,MAAM,mBAAmB;AACtC,SAAQC,KAAK,EAAEC,KAAK,QAAO,sBAAsB;AACjD,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACjD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,YAAY,IAAGC,kBAAkB,QAAO,wBAAwB;AACvE,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,qBAAqB,GAAGhB,MAAM,CAACiB,GAAG;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GATIF,qBAAqB;AAW3B,MAAMG,sBAAsB,GAAGnB,MAAM,CAACiB,GAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAZID,sBAAsB;AAc5B,MAAME,oBAAoB,GAAGrB,MAAM,CAACsB,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAdIF,oBAAoB;AAgB1B,MAAMG,YAAY,GAAGxB,MAAM,CAACyB,MAAM;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAxBIF,YAAY;AA0BlB,MAAMG,WAAW,GAAG3B,MAAM,CAACwB,YAAY,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACI,GAAA,GAXID,WAAW;AAajB,MAAME,aAAa,GAAG7B,MAAM,CAACiB,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GALID,aAAa;AAOnB,MAAME,gBAAgB,GAAG/B,MAAM,CAACiB,GAAG;AACnC;AACA;AACA;AACA,iBAAkBe,KAAK,IAAMA,KAAK,CAACC,cAAc,GAAG,OAAO,GAAG,GAAI;AAClE;AACA;AACA;AACA,mBAAoBD,KAAK,IAAMA,KAAK,CAACC,cAAc,GAAG,OAAO,GAAG,GAAI;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAhBIH,gBAAgB;AAkBtB,MAAMI,iBAAiB,GAAGnC,MAAM,CAACyB,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAhCID,iBAAiB;AAkCvB,MAAME,YAAY,GAAGrC,MAAM,CAACiB,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GAnBID,YAAY;AAqBlB,MAAME,mBAAmB,GAAGvC,MAAM,CAACiB,GAAG;AACtC;AACA;AACA;AACA;AACA,CAAC;AAACuB,GAAA,GALID,mBAAmB;AAOzB,MAAME,sBAAsB,GAAGzC,MAAM,CAACiB,GAAG;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACyB,GAAA,GAfID,sBAAsB;AAiB5B,MAAME,iBAAiB,GAAG3C,MAAM,CAACyB,MAAM;AACvC;AACA;AACA;AACA;AACA;AACA,sBAAuBO,KAAK,IACxBA,KAAK,CAACY,SAAS,GACX,yBAAyB,GACzBZ,KAAK,CAACa,UAAU,GAChB,yBAAyB,GACzB,2BAA2B;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GApBIH,iBAAiB;AAsBvB,MAAMI,eAAe,GAAG/C,MAAM,CAACiB,GAAG;AAClC;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA+B,IAAA,GA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
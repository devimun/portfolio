{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jun/Desktop/sqld_study/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19;import React,{useState}from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResultsContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  color: #d7dfe5;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n\"])));const ResultHeader=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  background-color: rgba(12, 20, 28, 0.5);\\n  border-radius: 12px;\\n  padding: 20px;\\n  margin-bottom: 24px;\\n  \\n  @media (max-width: 768px) {\\n    padding: 16px;\\n    margin-bottom: 16px;\\n  }\\n\"])));const ResultTitle=styled.h2(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  font-size: 24px;\\n  font-weight: 700;\\n  color: #2395e9;\\n  margin-bottom: 16px;\\n  \\n  @media (max-width: 768px) {\\n    font-size: 20px;\\n    margin-bottom: 12px;\\n  }\\n\"])));const ResultSummary=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(2, 1fr);\\n  gap: 12px;\\n  margin-bottom: 16px;\\n  \\n  @media (max-width: 768px) {\\n    grid-template-columns: 1fr;\\n    gap: 8px;\\n    margin-bottom: 12px;\\n  }\\n\"])));const ResultItem=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background: rgba(215, 223, 228, 0.05);\\n  padding: 12px 16px;\\n  border-radius: 8px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  \\n  span:first-child {\\n    font-weight: 500;\\n  }\\n  \\n  span:last-child {\\n    font-weight: 700;\\n    font-size: 18px;\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 10px 12px;\\n    \\n    span:last-child {\\n      font-size: 16px;\\n    }\\n  }\\n\"])));const ResultScore=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  background: rgba(35, 149, 233, 0.2);\\n  border-radius: 8px;\\n  padding: 16px;\\n  text-align: center;\\n  font-size: 20px;\\n  font-weight: 700;\\n  \\n  span {\\n    color: \",\";\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 12px;\\n    font-size: 18px;\\n  }\\n\"])),props=>props.score>=60?'#4CAF50':'#FF5252');const TabsContainer=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  margin-bottom: 20px;\\n  border-bottom: 1px solid rgba(215, 223, 228, 0.1);\\n  \\n  @media (max-width: 768px) {\\n    margin-bottom: 16px;\\n  }\\n\"])));const TabButton=styled.button(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  border: none;\\n  padding: 12px 20px;\\n  color: \",\";\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-weight: \",\";\\n  font-size: 16px;\\n  cursor: pointer;\\n  border-bottom: 2px solid \",\";\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    background: rgba(35, 149, 233, 0.1);\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 10px 16px;\\n    font-size: 14px;\\n  }\\n\"])),props=>props.active?'rgba(35, 149, 233, 0.2)':'transparent',props=>props.active?'#2395e9':'#d7dfe5',props=>props.active?'700':'500',props=>props.active?'#2395e9':'transparent');const QuestionsList=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 20px;\\n  \\n  @media (max-width: 768px) {\\n    gap: 16px;\\n  }\\n\"])));const QuestionCard=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  background-color: rgba(12, 20, 28, 0.5);\\n  border-radius: 12px;\\n  overflow: hidden;\\n  border: 1px solid rgba(215, 223, 228, 0.1);\\n  \\n  @media (max-width: 768px) {\\n    border-radius: 8px;\\n  }\\n\"])));const QuestionHeader=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  padding: 16px;\\n  background-color: \",\";\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  \\n  @media (max-width: 768px) {\\n    padding: 12px;\\n  }\\n\"])),props=>props.isCorrect?'rgba(60, 179, 113, 0.2)':'rgba(255, 82, 82, 0.2)');const QuestionNumber=styled.span(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  font-weight: 700;\\n  font-size: 16px;\\n  \\n  @media (max-width: 768px) {\\n    font-size: 14px;\\n  }\\n\"])));const QuestionStatus=styled.span(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  font-weight: 500;\\n  color: \",\";\\n  \\n  @media (max-width: 768px) {\\n    font-size: 14px;\\n  }\\n\"])),props=>props.isCorrect?'#4CAF50':'#FF5252');const QuestionContent=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  padding: 16px;\\n  white-space: pre-wrap;\\n  \\n  @media (max-width: 768px) {\\n    padding: 12px;\\n    font-size: 14px;\\n  }\\n\"])));const OptionsContainer=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 8px;\\n  margin-top: 12px;\\n  \\n  @media (max-width: 768px) {\\n    gap: 6px;\\n    margin-top: 10px;\\n  }\\n\"])));const OptionItem=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: flex-start;\\n  padding: 10px 12px;\\n  border-radius: 6px;\\n  background-color: \",\";\\n  \\n  @media (max-width: 768px) {\\n    padding: 8px 10px;\\n  }\\n\"])),props=>{if(props.isCorrectAnswer)return'rgba(60, 179, 113, 0.2)';if(props.isSelected&&!props.isCorrectAnswer)return'rgba(255, 82, 82, 0.2)';return'rgba(215, 223, 228, 0.05)';});const OptionNumber=styled.span(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  font-weight: 700;\\n  margin-right: 12px;\\n  min-width: 20px;\\n  \\n  @media (max-width: 768px) {\\n    margin-right: 8px;\\n  }\\n\"])));const OptionText=styled.span(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));const ExplanationSection=styled.div(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  margin-top: 16px;\\n  padding: 16px;\\n  background: rgba(35, 149, 233, 0.1);\\n  border-radius: 8px;\\n  \\n  @media (max-width: 768px) {\\n    margin-top: 12px;\\n    padding: 12px;\\n    font-size: 14px;\\n  }\\n\"])));const ExplanationTitle=styled.div(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  font-weight: 700;\\n  margin-bottom: 8px;\\n  color: #2395e9;\\n  \\n  @media (max-width: 768px) {\\n    margin-bottom: 6px;\\n  }\\n\"])));const ReturnButton=styled.button(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: rgba(35, 149, 233, 0.6);\\n  color: #d7dfe5;\\n  border: none;\\n  border-radius: 8px;\\n  padding: 12px 24px;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-weight: 600;\\n  font-size: 16px;\\n  cursor: pointer;\\n  margin-top: 20px;\\n  transition: all 0.2s ease;\\n  \\n  &:hover {\\n    background-color: rgba(35, 149, 233, 0.8);\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 10px 20px;\\n    font-size: 14px;\\n    margin-top: 16px;\\n  }\\n\"])));const MockTestResults=_ref=>{let{questions,userAnswers,totalQuestions,correctAnswers,score,onReturnToSelection}=_ref;const[activeTab,setActiveTab]=useState('incorrect');// 틀린 문제 필터링\nconst incorrectQuestions=questions===null||questions===void 0?void 0:questions.filter((_,index)=>userAnswers[index]!==questions[index].answer);// 맞은 문제 필터링\nconst correctQuestions=questions===null||questions===void 0?void 0:questions.filter((_,index)=>userAnswers[index]===questions[index].answer);// 현재 탭에 따라 보여줄 문제들\nconst displayQuestions=activeTab==='incorrect'?incorrectQuestions:activeTab==='correct'?correctQuestions:questions;const getQuestionIndex=question=>{return questions.findIndex(q=>q===question);};return/*#__PURE__*/_jsxs(ResultsContainer,{children:[/*#__PURE__*/_jsxs(ResultHeader,{children:[/*#__PURE__*/_jsx(ResultTitle,{children:\"\\uBAA8\\uC758\\uACE0\\uC0AC \\uACB0\\uACFC\"}),/*#__PURE__*/_jsxs(ResultSummary,{children:[/*#__PURE__*/_jsxs(ResultItem,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uCD1D \\uBB38\\uD56D \\uC218:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[totalQuestions,\"\\uAC1C\"]})]}),/*#__PURE__*/_jsxs(ResultItem,{children:[/*#__PURE__*/_jsx(\"span\",{children:\"\\uC815\\uB2F5 \\uC218:\"}),/*#__PURE__*/_jsxs(\"span\",{children:[correctAnswers,\"\\uAC1C\"]})]})]}),/*#__PURE__*/_jsxs(ResultScore,{score:score,children:[\"\\uCD5C\\uC885 \\uC810\\uC218: \",/*#__PURE__*/_jsxs(\"span\",{children:[score,\"\\uC810\"]}),\" \",score>=60?'(합격)':'(불합격)']})]}),/*#__PURE__*/_jsxs(TabsContainer,{children:[/*#__PURE__*/_jsxs(TabButton,{active:activeTab==='all',onClick:()=>setActiveTab('all'),children:[\"\\uC804\\uCCB4 \\uBB38\\uC81C (\",(questions===null||questions===void 0?void 0:questions.length)||0,\")\"]}),/*#__PURE__*/_jsxs(TabButton,{active:activeTab==='incorrect',onClick:()=>setActiveTab('incorrect'),children:[\"\\uD2C0\\uB9B0 \\uBB38\\uC81C (\",(incorrectQuestions===null||incorrectQuestions===void 0?void 0:incorrectQuestions.length)||0,\")\"]}),/*#__PURE__*/_jsxs(TabButton,{active:activeTab==='correct',onClick:()=>setActiveTab('correct'),children:[\"\\uB9DE\\uC740 \\uBB38\\uC81C (\",(correctQuestions===null||correctQuestions===void 0?void 0:correctQuestions.length)||0,\")\"]})]}),/*#__PURE__*/_jsx(QuestionsList,{children:displayQuestions===null||displayQuestions===void 0?void 0:displayQuestions.map(question=>{const questionIndex=getQuestionIndex(question);const userAnswer=userAnswers[questionIndex];const isCorrect=userAnswer===question.answer;return/*#__PURE__*/_jsxs(QuestionCard,{children:[/*#__PURE__*/_jsxs(QuestionHeader,{isCorrect:isCorrect,children:[/*#__PURE__*/_jsxs(QuestionNumber,{children:[\"\\uBB38\\uC81C \",questionIndex+1]}),/*#__PURE__*/_jsx(QuestionStatus,{isCorrect:isCorrect,children:isCorrect?'정답':'오답'})]}),/*#__PURE__*/_jsxs(QuestionContent,{children:[question.question,/*#__PURE__*/_jsx(OptionsContainer,{children:question.options.map((option,optIndex)=>/*#__PURE__*/_jsxs(OptionItem,{isSelected:userAnswer===optIndex,isCorrectAnswer:question.answer===optIndex,children:[/*#__PURE__*/_jsxs(OptionNumber,{children:[optIndex+1,\".\"]}),/*#__PURE__*/_jsx(OptionText,{children:option})]},optIndex))}),/*#__PURE__*/_jsxs(ExplanationSection,{children:[/*#__PURE__*/_jsx(ExplanationTitle,{children:\"\\uC815\\uB2F5 \\uD574\\uC124:\"}),question.explanation||'해설이 제공되지 않았습니다.']})]})]},questionIndex);})}),/*#__PURE__*/_jsx(ReturnButton,{onClick:onReturnToSelection,children:\"\\uBAA8\\uC758\\uACE0\\uC0AC \\uC120\\uD0DD\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"})]});};export default MockTestResults;","map":{"version":3,"names":["React","useState","styled","jsx","_jsx","jsxs","_jsxs","ResultsContainer","div","_templateObject","_taggedTemplateLiteral","ResultHeader","_templateObject2","ResultTitle","h2","_templateObject3","ResultSummary","_templateObject4","ResultItem","_templateObject5","ResultScore","_templateObject6","props","score","TabsContainer","_templateObject7","TabButton","button","_templateObject8","active","QuestionsList","_templateObject9","QuestionCard","_templateObject0","QuestionHeader","_templateObject1","isCorrect","QuestionNumber","span","_templateObject10","QuestionStatus","_templateObject11","QuestionContent","_templateObject12","OptionsContainer","_templateObject13","OptionItem","_templateObject14","isCorrectAnswer","isSelected","OptionNumber","_templateObject15","OptionText","_templateObject16","ExplanationSection","_templateObject17","ExplanationTitle","_templateObject18","ReturnButton","_templateObject19","MockTestResults","_ref","questions","userAnswers","totalQuestions","correctAnswers","onReturnToSelection","activeTab","setActiveTab","incorrectQuestions","filter","_","index","answer","correctQuestions","displayQuestions","getQuestionIndex","question","findIndex","q","children","onClick","length","map","questionIndex","userAnswer","options","option","optIndex","explanation"],"sources":["/Users/jun/Desktop/sqld_study/src/components/mock_test/MockTestResults.js"],"sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst ResultsContainer = styled.div`\n  width: 100%;\n  color: #d7dfe5;\n  font-family: \"IBM Plex Sans\", sans-serif;\n`;\n\nconst ResultHeader = styled.div`\n  background-color: rgba(12, 20, 28, 0.5);\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 24px;\n  \n  @media (max-width: 768px) {\n    padding: 16px;\n    margin-bottom: 16px;\n  }\n`;\n\nconst ResultTitle = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  color: #2395e9;\n  margin-bottom: 16px;\n  \n  @media (max-width: 768px) {\n    font-size: 20px;\n    margin-bottom: 12px;\n  }\n`;\n\nconst ResultSummary = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 12px;\n  margin-bottom: 16px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n    gap: 8px;\n    margin-bottom: 12px;\n  }\n`;\n\nconst ResultItem = styled.div`\n  background: rgba(215, 223, 228, 0.05);\n  padding: 12px 16px;\n  border-radius: 8px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  span:first-child {\n    font-weight: 500;\n  }\n  \n  span:last-child {\n    font-weight: 700;\n    font-size: 18px;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 12px;\n    \n    span:last-child {\n      font-size: 16px;\n    }\n  }\n`;\n\nconst ResultScore = styled.div`\n  background: rgba(35, 149, 233, 0.2);\n  border-radius: 8px;\n  padding: 16px;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 700;\n  \n  span {\n    color: ${props => props.score >= 60 ? '#4CAF50' : '#FF5252'};\n  }\n  \n  @media (max-width: 768px) {\n    padding: 12px;\n    font-size: 18px;\n  }\n`;\n\nconst TabsContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  border-bottom: 1px solid rgba(215, 223, 228, 0.1);\n  \n  @media (max-width: 768px) {\n    margin-bottom: 16px;\n  }\n`;\n\nconst TabButton = styled.button`\n  background: ${props => props.active ? 'rgba(35, 149, 233, 0.2)' : 'transparent'};\n  border: none;\n  padding: 12px 20px;\n  color: ${props => props.active ? '#2395e9' : '#d7dfe5'};\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-weight: ${props => props.active ? '700' : '500'};\n  font-size: 16px;\n  cursor: pointer;\n  border-bottom: 2px solid ${props => props.active ? '#2395e9' : 'transparent'};\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background: rgba(35, 149, 233, 0.1);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst QuestionsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  \n  @media (max-width: 768px) {\n    gap: 16px;\n  }\n`;\n\nconst QuestionCard = styled.div`\n  background-color: rgba(12, 20, 28, 0.5);\n  border-radius: 12px;\n  overflow: hidden;\n  border: 1px solid rgba(215, 223, 228, 0.1);\n  \n  @media (max-width: 768px) {\n    border-radius: 8px;\n  }\n`;\n\nconst QuestionHeader = styled.div`\n  padding: 16px;\n  background-color: ${props => props.isCorrect ? 'rgba(60, 179, 113, 0.2)' : 'rgba(255, 82, 82, 0.2)'};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  \n  @media (max-width: 768px) {\n    padding: 12px;\n  }\n`;\n\nconst QuestionNumber = styled.span`\n  font-weight: 700;\n  font-size: 16px;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst QuestionStatus = styled.span`\n  font-weight: 500;\n  color: ${props => props.isCorrect ? '#4CAF50' : '#FF5252'};\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n  }\n`;\n\nconst QuestionContent = styled.div`\n  padding: 16px;\n  white-space: pre-wrap;\n  \n  @media (max-width: 768px) {\n    padding: 12px;\n    font-size: 14px;\n  }\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  \n  @media (max-width: 768px) {\n    gap: 6px;\n    margin-top: 10px;\n  }\n`;\n\nconst OptionItem = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 10px 12px;\n  border-radius: 6px;\n  background-color: ${props => {\n    if (props.isCorrectAnswer) return 'rgba(60, 179, 113, 0.2)';\n    if (props.isSelected && !props.isCorrectAnswer) return 'rgba(255, 82, 82, 0.2)';\n    return 'rgba(215, 223, 228, 0.05)';\n  }};\n  \n  @media (max-width: 768px) {\n    padding: 8px 10px;\n  }\n`;\n\nconst OptionNumber = styled.span`\n  font-weight: 700;\n  margin-right: 12px;\n  min-width: 20px;\n  \n  @media (max-width: 768px) {\n    margin-right: 8px;\n  }\n`;\n\nconst OptionText = styled.span`\n  flex: 1;\n`;\n\nconst ExplanationSection = styled.div`\n  margin-top: 16px;\n  padding: 16px;\n  background: rgba(35, 149, 233, 0.1);\n  border-radius: 8px;\n  \n  @media (max-width: 768px) {\n    margin-top: 12px;\n    padding: 12px;\n    font-size: 14px;\n  }\n`;\n\nconst ExplanationTitle = styled.div`\n  font-weight: 700;\n  margin-bottom: 8px;\n  color: #2395e9;\n  \n  @media (max-width: 768px) {\n    margin-bottom: 6px;\n  }\n`;\n\nconst ReturnButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(35, 149, 233, 0.6);\n  color: #d7dfe5;\n  border: none;\n  border-radius: 8px;\n  padding: 12px 24px;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-weight: 600;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 20px;\n  transition: all 0.2s ease;\n  \n  &:hover {\n    background-color: rgba(35, 149, 233, 0.8);\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 20px;\n    font-size: 14px;\n    margin-top: 16px;\n  }\n`;\n\nconst MockTestResults = ({ \n  questions, \n  userAnswers, \n  totalQuestions,\n  correctAnswers,\n  score,\n  onReturnToSelection \n}) => {\n  const [activeTab, setActiveTab] = useState('incorrect');\n\n  // 틀린 문제 필터링\n  const incorrectQuestions = questions?.filter((_, index) => \n    userAnswers[index] !== questions[index].answer\n  );\n\n  // 맞은 문제 필터링\n  const correctQuestions = questions?.filter((_, index) => \n    userAnswers[index] === questions[index].answer\n  );\n\n  // 현재 탭에 따라 보여줄 문제들\n  const displayQuestions = activeTab === 'incorrect' \n    ? incorrectQuestions \n    : activeTab === 'correct' \n      ? correctQuestions \n      : questions;\n\n  const getQuestionIndex = (question) => {\n    return questions.findIndex(q => q === question);\n  };\n\n  return (\n    <ResultsContainer>\n      <ResultHeader>\n        <ResultTitle>모의고사 결과</ResultTitle>\n        <ResultSummary>\n          <ResultItem>\n            <span>총 문항 수:</span>\n            <span>{totalQuestions}개</span>\n          </ResultItem>\n          <ResultItem>\n            <span>정답 수:</span>\n            <span>{correctAnswers}개</span>\n          </ResultItem>\n        </ResultSummary>\n        <ResultScore score={score}>\n          최종 점수: <span>{score}점</span> {score >= 60 ? '(합격)' : '(불합격)'}\n        </ResultScore>\n      </ResultHeader>\n      \n      <TabsContainer>\n        <TabButton \n          active={activeTab === 'all'} \n          onClick={() => setActiveTab('all')}\n        >\n          전체 문제 ({questions?.length || 0})\n        </TabButton>\n        <TabButton \n          active={activeTab === 'incorrect'} \n          onClick={() => setActiveTab('incorrect')}\n        >\n          틀린 문제 ({incorrectQuestions?.length || 0})\n        </TabButton>\n        <TabButton \n          active={activeTab === 'correct'} \n          onClick={() => setActiveTab('correct')}\n        >\n          맞은 문제 ({correctQuestions?.length || 0})\n        </TabButton>\n      </TabsContainer>\n      \n      <QuestionsList>\n        {displayQuestions?.map((question) => {\n          const questionIndex = getQuestionIndex(question);\n          const userAnswer = userAnswers[questionIndex];\n          const isCorrect = userAnswer === question.answer;\n          \n          return (\n            <QuestionCard key={questionIndex}>\n              <QuestionHeader isCorrect={isCorrect}>\n                <QuestionNumber>문제 {questionIndex + 1}</QuestionNumber>\n                <QuestionStatus isCorrect={isCorrect}>\n                  {isCorrect ? '정답' : '오답'}\n                </QuestionStatus>\n              </QuestionHeader>\n              \n              <QuestionContent>\n                {question.question}\n                \n                <OptionsContainer>\n                  {question.options.map((option, optIndex) => (\n                    <OptionItem \n                      key={optIndex}\n                      isSelected={userAnswer === optIndex}\n                      isCorrectAnswer={question.answer === optIndex}\n                    >\n                      <OptionNumber>{optIndex + 1}.</OptionNumber>\n                      <OptionText>{option}</OptionText>\n                    </OptionItem>\n                  ))}\n                </OptionsContainer>\n                \n                <ExplanationSection>\n                  <ExplanationTitle>정답 해설:</ExplanationTitle>\n                  {question.explanation || '해설이 제공되지 않았습니다.'}\n                </ExplanationSection>\n              </QuestionContent>\n            </QuestionCard>\n          );\n        })}\n      </QuestionsList>\n      \n      <ReturnButton onClick={onReturnToSelection}>\n        모의고사 선택으로 돌아가기\n      </ReturnButton>\n    </ResultsContainer>\n  );\n};\n\nexport default MockTestResults; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
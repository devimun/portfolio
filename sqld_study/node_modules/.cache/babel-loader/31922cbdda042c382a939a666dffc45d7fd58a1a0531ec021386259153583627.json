{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jun/Desktop/sqld_study/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16;import React from'react';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const QuestionContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 20px;\\n  background-color: rgba(12, 20, 28, 0.5);\\n  border-radius: 12px;\\n  color: #d7dfe5;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  @media (max-width: 768px) {\\n    padding: 16px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    padding: 12px;\\n  }\\n\"])));const QuestionHeader=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  margin-bottom: 20px;\\n  padding-bottom: 10px;\\n  border-bottom: 1px solid rgba(214, 224, 230, 0.2);\\n  \\n  @media (max-width: 768px) {\\n    margin-bottom: 16px;\\n    padding-bottom: 8px;\\n  }\\n\"])));const QuestionNumber=styled.h3(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: #d7dfe5;\\n  font-weight: 500;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  @media (max-width: 768px) {\\n    font-size: 15px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    font-size: 14px;\\n  }\\n\"])));const QuestionText=styled.h2(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-size: 1.3rem;\\n  font-weight: 600;\\n  margin-bottom: 20px;\\n  line-height: 1.5;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  @media (max-width: 768px) {\\n    font-size: 1.1rem;\\n    margin-bottom: 16px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    font-size: 1rem;\\n    margin-bottom: 14px;\\n  }\\n\"])));const DiagramContainer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin: 20px 0;\\n  padding: 15px;\\n  background-color: rgba(215, 223, 228, 0.08);\\n  border-radius: 12px;\\n  overflow-x: auto;\\n  \\n  @media (max-width: 768px) {\\n    margin: 16px 0;\\n    padding: 12px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    margin: 14px 0;\\n    padding: 10px;\\n  }\\n\"])));const TableDisplay=styled.table(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  border-collapse: collapse;\\n  margin: 15px 0;\\n  font-size: 0.9em;\\n  border-radius: 8px;\\n  overflow: hidden;\\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\\n  \\n  @media (max-width: 768px) {\\n    font-size: 0.85em;\\n    margin: 12px 0;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    font-size: 0.8em;\\n    margin: 10px 0;\\n  }\\n\"])));const TableRow=styled.tr(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background-color: \",\";\\n  border-bottom: 1px solid rgba(214, 224, 230, 0.1);\\n  \\n  &:last-child {\\n    border-bottom: 2px solid #2395e9;\\n  }\\n  \\n  &:hover {\\n    background-color: \",\";\\n  }\\n\"])),props=>props.isHeader?'#1e2832':'#0d151e',props=>props.isHeader?'#1e2832':'#151e28');const TableCell=styled.td(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  padding: 12px 15px;\\n  text-align: left;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  @media (max-width: 768px) {\\n    padding: 10px 12px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    padding: 8px 10px;\\n  }\\n\"])));const TableHeader=styled.th(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  padding: 12px 15px;\\n  text-align: left;\\n  color: #d7dfe5;\\n  font-weight: 600;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  @media (max-width: 768px) {\\n    padding: 10px 12px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    padding: 8px 10px;\\n  }\\n\"])));const OptionsContainer=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  margin-top: 30px;\\n  \\n  @media (max-width: 768px) {\\n    margin-top: 24px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    margin-top: 20px;\\n  }\\n\"])));const OptionItem=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  padding: 12px 15px;\\n  margin-bottom: 10px;\\n  background-color: \",\";\\n  border-radius: 12px;\\n  cursor: \",\";\\n  transition: background-color 0.2s;\\n  display: flex;\\n  align-items: center;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  &:hover {\\n    background-color: \",\";\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 10px 12px;\\n    margin-bottom: 8px;\\n    font-size: 14px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    padding: 8px 10px;\\n    margin-bottom: 6px;\\n    font-size: 13px;\\n  }\\n\"])),props=>props.isSelected?'rgba(35, 149, 233, 0.4)':props.isCorrect&&props.showAnswer?'rgba(60, 179, 113, 0.4)':props.isWrong&&props.showAnswer?'rgba(255, 77, 77, 0.4)':'rgba(215, 223, 228, 0.08)',props=>props.disabled?'default':'pointer',props=>props.disabled?props.isSelected?'rgba(35, 149, 233, 0.4)':props.isCorrect&&props.showAnswer?'rgba(60, 179, 113, 0.4)':props.isWrong&&props.showAnswer?'rgba(255, 77, 77, 0.4)':'rgba(215, 223, 228, 0.08)':'rgba(35, 149, 233, 0.2)');const OptionIndex=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  width: 30px;\\n  height: 30px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: rgba(0, 0, 0, 0.2);\\n  border-radius: 50%;\\n  margin-right: 15px;\\n  font-weight: 600;\\n  \\n  @media (max-width: 768px) {\\n    width: 26px;\\n    height: 26px;\\n    margin-right: 12px;\\n    font-size: 14px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    width: 24px;\\n    height: 24px;\\n    margin-right: 10px;\\n    font-size: 13px;\\n  }\\n\"])));const OptionText=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  flex: 1;\\n\"])));const NavigationContainer=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  margin-top: 30px;\\n  \\n  @media (max-width: 768px) {\\n    margin-top: 24px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    margin-top: 20px;\\n    flex-direction: column;\\n    gap: 10px;\\n  }\\n\"])));const NavButton=styled.button(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  padding: 10px 20px;\\n  background-color: rgba(35, 149, 233, 0.4);\\n  color: #d7dfe5;\\n  border: none;\\n  border-radius: 8px;\\n  cursor: pointer;\\n  font-weight: 500;\\n  transition: background-color 0.2s;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  &:hover {\\n    background-color: rgba(35, 149, 233, 0.6);\\n  }\\n  \\n  &:disabled {\\n    background-color: rgba(214, 224, 230, 0.1);\\n    cursor: not-allowed;\\n  }\\n  \\n  @media (max-width: 768px) {\\n    padding: 8px 16px;\\n    font-size: 14px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    width: 100%;\\n    padding: 10px 0;\\n  }\\n\"])));const ExplanationContainer=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  margin-top: 20px;\\n  padding: 15px;\\n  background-color: rgba(60, 179, 113, 0.1);\\n  border-radius: 12px;\\n  border-left: 4px solid #3cb371;\\n  \\n  @media (max-width: 768px) {\\n    margin-top: 16px;\\n    padding: 12px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    margin-top: 14px;\\n    padding: 10px;\\n  }\\n\"])));const ExplanationTitle=styled.h4(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  color: #3cb371;\\n  margin-bottom: 10px;\\n  font-weight: 600;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  @media (max-width: 768px) {\\n    font-size: 15px;\\n    margin-bottom: 8px;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    font-size: 14px;\\n    margin-bottom: 6px;\\n  }\\n\"])));const ExplanationText=styled.p(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  color: #d7dfe5;\\n  line-height: 1.5;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  \\n  @media (max-width: 768px) {\\n    font-size: 14px;\\n    line-height: 1.4;\\n  }\\n  \\n  @media (max-width: 480px) {\\n    font-size: 13px;\\n  }\\n\"])));// 다이어그램 또는 테이블 렌더링 컴포넌트\nconst DiagramRenderer=_ref=>{let{diagram}=_ref;if(!diagram)return null;if(diagram.type==='table'){return/*#__PURE__*/_jsx(DiagramContainer,{children:/*#__PURE__*/_jsxs(TableDisplay,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(TableRow,{isHeader:true,children:diagram.columns.map((col,idx)=>/*#__PURE__*/_jsx(TableHeader,{children:col},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:diagram.rows.map((row,rowIdx)=>/*#__PURE__*/_jsx(TableRow,{children:row.map((cell,cellIdx)=>/*#__PURE__*/_jsx(TableCell,{children:cell===null?'NULL':cell},cellIdx))},rowIdx))})]})});}if(diagram.type==='tables'){return/*#__PURE__*/_jsx(DiagramContainer,{children:diagram.tables.map((table,tableIdx)=>/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'20px'},children:[/*#__PURE__*/_jsx(\"h4\",{style:{marginBottom:'10px',fontFamily:'\"IBM Plex Sans\", sans-serif',color:'#d7dfe5',fontWeight:'600',fontSize:window.innerWidth<=480?'14px':window.innerWidth<=768?'15px':'16px'},children:table.name}),/*#__PURE__*/_jsxs(TableDisplay,{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(TableRow,{isHeader:true,children:table.columns.map((col,idx)=>/*#__PURE__*/_jsx(TableHeader,{children:col},idx))})}),/*#__PURE__*/_jsx(\"tbody\",{children:table.rows.map((row,rowIdx)=>/*#__PURE__*/_jsx(TableRow,{children:row.map((cell,cellIdx)=>/*#__PURE__*/_jsx(TableCell,{children:cell===null?'NULL':cell},cellIdx))},rowIdx))})]})]},tableIdx))});}return/*#__PURE__*/_jsx(DiagramContainer,{children:/*#__PURE__*/_jsx(\"p\",{style:{fontFamily:'\"IBM Plex Sans\", sans-serif'},children:\"\\uB2E4\\uC774\\uC5B4\\uADF8\\uB7A8 \\uD615\\uC2DD\\uC774 \\uC9C0\\uC6D0\\uB418\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"})});};const QuestionDisplay=_ref2=>{let{question,questionIndex,totalQuestions,selectedAnswer,onAnswerSelect,onPrevious,onNext,onSubmit,isLast,testFinished}=_ref2;const handleOptionClick=optionIndex=>{if(!testFinished){onAnswerSelect(optionIndex);}};return/*#__PURE__*/_jsxs(QuestionContainer,{children:[/*#__PURE__*/_jsx(QuestionHeader,{children:/*#__PURE__*/_jsxs(QuestionNumber,{children:[\"\\uBB38\\uC81C \",questionIndex+1,\" / \",totalQuestions]})}),/*#__PURE__*/_jsx(QuestionText,{children:question.question}),question.diagram&&/*#__PURE__*/_jsx(DiagramRenderer,{diagram:question.diagram}),/*#__PURE__*/_jsx(OptionsContainer,{children:question.options.map((option,idx)=>/*#__PURE__*/_jsxs(OptionItem,{isSelected:selectedAnswer===idx,isCorrect:idx===question.answer&&testFinished,isWrong:selectedAnswer===idx&&idx!==question.answer&&testFinished,showAnswer:testFinished,onClick:()=>handleOptionClick(idx),disabled:testFinished,children:[/*#__PURE__*/_jsx(OptionIndex,{children:idx+1}),/*#__PURE__*/_jsx(OptionText,{children:option})]},idx))}),testFinished&&/*#__PURE__*/_jsxs(ExplanationContainer,{children:[/*#__PURE__*/_jsx(ExplanationTitle,{children:\"\\uC815\\uB2F5 \\uD574\\uC124\"}),/*#__PURE__*/_jsx(ExplanationText,{children:question.explanation})]}),/*#__PURE__*/_jsxs(NavigationContainer,{children:[/*#__PURE__*/_jsx(NavButton,{onClick:onPrevious,disabled:questionIndex===0,children:\"\\uC774\\uC804 \\uBB38\\uC81C\"}),!isLast?/*#__PURE__*/_jsx(NavButton,{onClick:onNext,children:\"\\uB2E4\\uC74C \\uBB38\\uC81C\"}):/*#__PURE__*/_jsx(NavButton,{onClick:onSubmit,disabled:testFinished,children:testFinished?'제출 완료':'시험 제출하기'})]})]});};export default QuestionDisplay;","map":{"version":3,"names":["React","styled","jsx","_jsx","jsxs","_jsxs","QuestionContainer","div","_templateObject","_taggedTemplateLiteral","QuestionHeader","_templateObject2","QuestionNumber","h3","_templateObject3","QuestionText","h2","_templateObject4","DiagramContainer","_templateObject5","TableDisplay","table","_templateObject6","TableRow","tr","_templateObject7","props","isHeader","TableCell","td","_templateObject8","TableHeader","th","_templateObject9","OptionsContainer","_templateObject0","OptionItem","_templateObject1","isSelected","isCorrect","showAnswer","isWrong","disabled","OptionIndex","_templateObject10","OptionText","_templateObject11","NavigationContainer","_templateObject12","NavButton","button","_templateObject13","ExplanationContainer","_templateObject14","ExplanationTitle","h4","_templateObject15","ExplanationText","p","_templateObject16","DiagramRenderer","_ref","diagram","type","children","columns","map","col","idx","rows","row","rowIdx","cell","cellIdx","tables","tableIdx","style","marginBottom","fontFamily","color","fontWeight","fontSize","window","innerWidth","name","QuestionDisplay","_ref2","question","questionIndex","totalQuestions","selectedAnswer","onAnswerSelect","onPrevious","onNext","onSubmit","isLast","testFinished","handleOptionClick","optionIndex","options","option","answer","onClick","explanation"],"sources":["/Users/jun/Desktop/sqld_study/src/components/mock_test/QuestionDisplay.js"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst QuestionContainer = styled.div`\n  width: 100%;\n  padding: 20px;\n  background-color: rgba(12, 20, 28, 0.5);\n  border-radius: 12px;\n  color: #d7dfe5;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  @media (max-width: 768px) {\n    padding: 16px;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 12px;\n  }\n`;\n\nconst QuestionHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  padding-bottom: 10px;\n  border-bottom: 1px solid rgba(214, 224, 230, 0.2);\n  \n  @media (max-width: 768px) {\n    margin-bottom: 16px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst QuestionNumber = styled.h3`\n  color: #d7dfe5;\n  font-weight: 500;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  @media (max-width: 768px) {\n    font-size: 15px;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 14px;\n  }\n`;\n\nconst QuestionText = styled.h2`\n  font-size: 1.3rem;\n  font-weight: 600;\n  margin-bottom: 20px;\n  line-height: 1.5;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  @media (max-width: 768px) {\n    font-size: 1.1rem;\n    margin-bottom: 16px;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 1rem;\n    margin-bottom: 14px;\n  }\n`;\n\nconst DiagramContainer = styled.div`\n  margin: 20px 0;\n  padding: 15px;\n  background-color: rgba(215, 223, 228, 0.08);\n  border-radius: 12px;\n  overflow-x: auto;\n  \n  @media (max-width: 768px) {\n    margin: 16px 0;\n    padding: 12px;\n  }\n  \n  @media (max-width: 480px) {\n    margin: 14px 0;\n    padding: 10px;\n  }\n`;\n\nconst TableDisplay = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  margin: 15px 0;\n  font-size: 0.9em;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n  \n  @media (max-width: 768px) {\n    font-size: 0.85em;\n    margin: 12px 0;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 0.8em;\n    margin: 10px 0;\n  }\n`;\n\nconst TableRow = styled.tr`\n  background-color: ${props => props.isHeader ? '#1e2832' : '#0d151e'};\n  border-bottom: 1px solid rgba(214, 224, 230, 0.1);\n  \n  &:last-child {\n    border-bottom: 2px solid #2395e9;\n  }\n  \n  &:hover {\n    background-color: ${props => props.isHeader ? '#1e2832' : '#151e28'};\n  }\n`;\n\nconst TableCell = styled.td`\n  padding: 12px 15px;\n  text-align: left;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  @media (max-width: 768px) {\n    padding: 10px 12px;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 8px 10px;\n  }\n`;\n\nconst TableHeader = styled.th`\n  padding: 12px 15px;\n  text-align: left;\n  color: #d7dfe5;\n  font-weight: 600;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  @media (max-width: 768px) {\n    padding: 10px 12px;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 8px 10px;\n  }\n`;\n\nconst OptionsContainer = styled.div`\n  margin-top: 30px;\n  \n  @media (max-width: 768px) {\n    margin-top: 24px;\n  }\n  \n  @media (max-width: 480px) {\n    margin-top: 20px;\n  }\n`;\n\nconst OptionItem = styled.div`\n  padding: 12px 15px;\n  margin-bottom: 10px;\n  background-color: ${props => \n    props.isSelected \n      ? 'rgba(35, 149, 233, 0.4)'\n      : props.isCorrect && props.showAnswer\n        ? 'rgba(60, 179, 113, 0.4)'\n        : props.isWrong && props.showAnswer\n          ? 'rgba(255, 77, 77, 0.4)'\n          : 'rgba(215, 223, 228, 0.08)'\n  };\n  border-radius: 12px;\n  cursor: ${props => props.disabled ? 'default' : 'pointer'};\n  transition: background-color 0.2s;\n  display: flex;\n  align-items: center;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  &:hover {\n    background-color: ${props => \n      props.disabled \n        ? props.isSelected \n          ? 'rgba(35, 149, 233, 0.4)'\n          : props.isCorrect && props.showAnswer\n            ? 'rgba(60, 179, 113, 0.4)'\n            : props.isWrong && props.showAnswer\n              ? 'rgba(255, 77, 77, 0.4)'\n              : 'rgba(215, 223, 228, 0.08)'\n        : 'rgba(35, 149, 233, 0.2)'\n    };\n  }\n  \n  @media (max-width: 768px) {\n    padding: 10px 12px;\n    margin-bottom: 8px;\n    font-size: 14px;\n  }\n  \n  @media (max-width: 480px) {\n    padding: 8px 10px;\n    margin-bottom: 6px;\n    font-size: 13px;\n  }\n`;\n\nconst OptionIndex = styled.div`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: 50%;\n  margin-right: 15px;\n  font-weight: 600;\n  \n  @media (max-width: 768px) {\n    width: 26px;\n    height: 26px;\n    margin-right: 12px;\n    font-size: 14px;\n  }\n  \n  @media (max-width: 480px) {\n    width: 24px;\n    height: 24px;\n    margin-right: 10px;\n    font-size: 13px;\n  }\n`;\n\nconst OptionText = styled.div`\n  flex: 1;\n`;\n\nconst NavigationContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 30px;\n  \n  @media (max-width: 768px) {\n    margin-top: 24px;\n  }\n  \n  @media (max-width: 480px) {\n    margin-top: 20px;\n    flex-direction: column;\n    gap: 10px;\n  }\n`;\n\nconst NavButton = styled.button`\n  padding: 10px 20px;\n  background-color: rgba(35, 149, 233, 0.4);\n  color: #d7dfe5;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n  font-weight: 500;\n  transition: background-color 0.2s;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  &:hover {\n    background-color: rgba(35, 149, 233, 0.6);\n  }\n  \n  &:disabled {\n    background-color: rgba(214, 224, 230, 0.1);\n    cursor: not-allowed;\n  }\n  \n  @media (max-width: 768px) {\n    padding: 8px 16px;\n    font-size: 14px;\n  }\n  \n  @media (max-width: 480px) {\n    width: 100%;\n    padding: 10px 0;\n  }\n`;\n\nconst ExplanationContainer = styled.div`\n  margin-top: 20px;\n  padding: 15px;\n  background-color: rgba(60, 179, 113, 0.1);\n  border-radius: 12px;\n  border-left: 4px solid #3cb371;\n  \n  @media (max-width: 768px) {\n    margin-top: 16px;\n    padding: 12px;\n  }\n  \n  @media (max-width: 480px) {\n    margin-top: 14px;\n    padding: 10px;\n  }\n`;\n\nconst ExplanationTitle = styled.h4`\n  color: #3cb371;\n  margin-bottom: 10px;\n  font-weight: 600;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  @media (max-width: 768px) {\n    font-size: 15px;\n    margin-bottom: 8px;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 14px;\n    margin-bottom: 6px;\n  }\n`;\n\nconst ExplanationText = styled.p`\n  color: #d7dfe5;\n  line-height: 1.5;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  \n  @media (max-width: 768px) {\n    font-size: 14px;\n    line-height: 1.4;\n  }\n  \n  @media (max-width: 480px) {\n    font-size: 13px;\n  }\n`;\n\n// 다이어그램 또는 테이블 렌더링 컴포넌트\nconst DiagramRenderer = ({ diagram }) => {\n  if (!diagram) return null;\n\n  if (diagram.type === 'table') {\n    return (\n      <DiagramContainer>\n        <TableDisplay>\n          <thead>\n            <TableRow isHeader>\n              {diagram.columns.map((col, idx) => (\n                <TableHeader key={idx}>{col}</TableHeader>\n              ))}\n            </TableRow>\n          </thead>\n          <tbody>\n            {diagram.rows.map((row, rowIdx) => (\n              <TableRow key={rowIdx}>\n                {row.map((cell, cellIdx) => (\n                  <TableCell key={cellIdx}>\n                    {cell === null ? 'NULL' : cell}\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </tbody>\n        </TableDisplay>\n      </DiagramContainer>\n    );\n  }\n\n  if (diagram.type === 'tables') {\n    return (\n      <DiagramContainer>\n        {diagram.tables.map((table, tableIdx) => (\n          <div key={tableIdx} style={{ marginBottom: '20px' }}>\n            <h4 style={{ \n              marginBottom: '10px', \n              fontFamily: '\"IBM Plex Sans\", sans-serif',\n              color: '#d7dfe5',\n              fontWeight: '600',\n              fontSize: window.innerWidth <= 480 ? '14px' : window.innerWidth <= 768 ? '15px' : '16px'\n            }}>\n              {table.name}\n            </h4>\n            <TableDisplay>\n              <thead>\n                <TableRow isHeader>\n                  {table.columns.map((col, idx) => (\n                    <TableHeader key={idx}>{col}</TableHeader>\n                  ))}\n                </TableRow>\n              </thead>\n              <tbody>\n                {table.rows.map((row, rowIdx) => (\n                  <TableRow key={rowIdx}>\n                    {row.map((cell, cellIdx) => (\n                      <TableCell key={cellIdx}>\n                        {cell === null ? 'NULL' : cell}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))}\n              </tbody>\n            </TableDisplay>\n          </div>\n        ))}\n      </DiagramContainer>\n    );\n  }\n\n  return (\n    <DiagramContainer>\n      <p style={{ fontFamily: '\"IBM Plex Sans\", sans-serif' }}>다이어그램 형식이 지원되지 않습니다.</p>\n    </DiagramContainer>\n  );\n};\n\nconst QuestionDisplay = ({ \n  question, \n  questionIndex, \n  totalQuestions, \n  selectedAnswer, \n  onAnswerSelect, \n  onPrevious, \n  onNext, \n  onSubmit, \n  isLast,\n  testFinished \n}) => {\n  const handleOptionClick = (optionIndex) => {\n    if (!testFinished) {\n      onAnswerSelect(optionIndex);\n    }\n  };\n\n  return (\n    <QuestionContainer>\n      <QuestionHeader>\n        <QuestionNumber>문제 {questionIndex + 1} / {totalQuestions}</QuestionNumber>\n      </QuestionHeader>\n      \n      <QuestionText>{question.question}</QuestionText>\n      \n      {question.diagram && (\n        <DiagramRenderer diagram={question.diagram} />\n      )}\n      \n      <OptionsContainer>\n        {question.options.map((option, idx) => (\n          <OptionItem \n            key={idx}\n            isSelected={selectedAnswer === idx}\n            isCorrect={idx === question.answer && testFinished}\n            isWrong={selectedAnswer === idx && idx !== question.answer && testFinished}\n            showAnswer={testFinished}\n            onClick={() => handleOptionClick(idx)}\n            disabled={testFinished}\n          >\n            <OptionIndex>{idx + 1}</OptionIndex>\n            <OptionText>{option}</OptionText>\n          </OptionItem>\n        ))}\n      </OptionsContainer>\n      \n      {testFinished && (\n        <ExplanationContainer>\n          <ExplanationTitle>정답 해설</ExplanationTitle>\n          <ExplanationText>{question.explanation}</ExplanationText>\n        </ExplanationContainer>\n      )}\n      \n      <NavigationContainer>\n        <NavButton onClick={onPrevious} disabled={questionIndex === 0}>\n          이전 문제\n        </NavButton>\n        \n        {!isLast ? (\n          <NavButton onClick={onNext}>\n            다음 문제\n          </NavButton>\n        ) : (\n          <NavButton onClick={onSubmit} disabled={testFinished}>\n            {testFinished ? '제출 완료' : '시험 제출하기'}\n          </NavButton>\n        )}\n      </NavigationContainer>\n    </QuestionContainer>\n  );\n};\n\nexport default QuestionDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
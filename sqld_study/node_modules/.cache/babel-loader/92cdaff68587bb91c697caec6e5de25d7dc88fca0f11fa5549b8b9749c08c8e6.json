{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jun/Desktop/sqld_study/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10;import React from\"react\";import styled from\"styled-components\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ResultContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n  max-width: 800px;\\n  height: calc(100vh - 140px);\\n  margin: 0 auto;\\n  padding: 20px;\\n  overflow-y: auto;\\n\"])));const Title=styled.h1(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-family: \\\"Plus Jakarta Sans\\\", sans-serif;\\n  font-weight: 700;\\n  font-size: 28px;\\n  color: #d7dfe5;\\n  text-align: center;\\n  margin-bottom: 20px;\\n\"])));const ScoreCard=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background-color: #121c2b;\\n  border-radius: 22px;\\n  padding: 30px;\\n  width: 100%;\\n  margin-bottom: 20px;\\n  text-align: center;\\n\"])));const ScoreText=styled.p(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-family: \\\"Plus Jakarta Sans\\\", sans-serif;\\n  font-weight: 700;\\n  font-size: 36px;\\n  color: #d7dfe5;\\n  margin-bottom: 10px;\\n\"])));const ScoreDescription=styled.p(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-size: 16px;\\n  color: #a7b7c2;\\n\"])));const QuestionList=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 15px;\\n  overflow-y: auto;\\n  flex: 1;\\n  padding-right: 10px;\\n\\n  /* \\uC2A4\\uD06C\\uB864\\uBC14 \\uC2A4\\uD0C0\\uC77C\\uB9C1 */\\n  &::-webkit-scrollbar {\\n    width: 8px;\\n  }\\n\\n  &::-webkit-scrollbar-track {\\n    background: rgba(215, 223, 228, 0.05);\\n    border-radius: 4px;\\n  }\\n\\n  &::-webkit-scrollbar-thumb {\\n    background: rgba(215, 223, 228, 0.15);\\n    border-radius: 4px;\\n\\n    &:hover {\\n      background: rgba(215, 223, 228, 0.25);\\n    }\\n  }\\n\"])));const QuestionItem=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background-color: #121c2b;\\n  border-radius: 12px;\\n  padding: 20px;\\n  border-left: 4px solid\\n    \",\";\\n\"])),props=>props.$isCorrect?\"#2ecc71\":\"#e74c3c\");const QuestionText=styled.p(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-size: 15px;\\n  color: #d7dfe5;\\n  margin-bottom: 10px;\\n\"])));const AnswerText=styled.p(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-size: 14px;\\n  color: \",\";\\n  margin-bottom: 10px;\\n\"])),props=>props.$isCorrect?\"#2ecc71\":\"#e74c3c\");const ExplanationText=styled.p(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-size: 14px;\\n  color: #a7b7c2;\\n  font-style: italic;\\n  margin-top: 10px;\\n\"])));const Button=styled.button(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  font-family: \\\"Plus Jakarta Sans\\\", sans-serif;\\n  font-weight: 500;\\n  font-size: 15px;\\n  color: #000000;\\n  background-color: #2395e9;\\n  border: none;\\n  border-radius: 22px;\\n  padding: 10px 20px;\\n  cursor: pointer;\\n  margin-top: 30px;\\n\\n  &:hover {\\n    background-color: #1b7ac2;\\n  }\\n\"])));const NoQuestionsText=styled.p(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-size: 16px;\\n  color: #d7dfe5;\\n  text-align: center;\\n  margin: 30px 0;\\n\"])));const QuizResult=_ref=>{let{score,totalQuestions,userAnswers,quizData,answeredIds,onRetry}=_ref;const navigate=useNavigate();const handleRetryClick=()=>{if(onRetry){onRetry();}else{navigate(\"/quiz\");}};const percentage=totalQuestions>0?Math.round(score/totalQuestions*100):0;return/*#__PURE__*/_jsxs(ResultContainer,{children:[/*#__PURE__*/_jsx(Title,{children:\"\\uD034\\uC988 \\uACB0\\uACFC\"}),/*#__PURE__*/_jsxs(ScoreCard,{children:[/*#__PURE__*/_jsxs(ScoreText,{children:[score,\" / \",totalQuestions,\" \\uBB38\\uC81C \\uC815\\uB2F5\"]}),/*#__PURE__*/_jsxs(ScoreDescription,{children:[\"\\uC815\\uB2F5\\uB960: \",percentage,\"%\"]})]}),/*#__PURE__*/_jsx(QuestionList,{children:answeredIds.length===0?/*#__PURE__*/_jsx(NoQuestionsText,{children:\"\\uC544\\uC9C1 \\uD480\\uC5C8\\uB358 \\uBB38\\uC81C\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}):answeredIds.map((id,index)=>{const question=quizData[id];const userAnswer=userAnswers[id];const isCorrect=userAnswer===question.correctAnswer;return/*#__PURE__*/_jsxs(QuestionItem,{$isCorrect:isCorrect,children:[/*#__PURE__*/_jsxs(QuestionText,{children:[index+1,\". \",question.question]}),/*#__PURE__*/_jsx(AnswerText,{$isCorrect:isCorrect,children:isCorrect?\"\\uC815\\uB2F5: \".concat(question.correctAnswer):\"\\uC624\\uB2F5: \".concat(userAnswer||\"응답 없음\",\" (\\uC815\\uB2F5: \").concat(question.correctAnswer,\")\")}),/*#__PURE__*/_jsx(ExplanationText,{children:question.explanation})]},question.id);})}),/*#__PURE__*/_jsx(Button,{onClick:handleRetryClick,children:\"\\uB2E4\\uC2DC \\uD480\\uAE30\"})]});};export default QuizResult;","map":{"version":3,"names":["React","styled","useNavigate","jsx","_jsx","jsxs","_jsxs","ResultContainer","div","_templateObject","_taggedTemplateLiteral","Title","h1","_templateObject2","ScoreCard","_templateObject3","ScoreText","p","_templateObject4","ScoreDescription","_templateObject5","QuestionList","_templateObject6","QuestionItem","_templateObject7","props","$isCorrect","QuestionText","_templateObject8","AnswerText","_templateObject9","ExplanationText","_templateObject0","Button","button","_templateObject1","NoQuestionsText","_templateObject10","QuizResult","_ref","score","totalQuestions","userAnswers","quizData","answeredIds","onRetry","navigate","handleRetryClick","percentage","Math","round","children","length","map","id","index","question","userAnswer","isCorrect","correctAnswer","concat","explanation","onClick"],"sources":["/Users/jun/Desktop/sqld_study/src/components/quiz/QuizResult.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ResultContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  max-width: 800px;\n  height: calc(100vh - 140px);\n  margin: 0 auto;\n  padding: 20px;\n  overflow-y: auto;\n`;\n\nconst Title = styled.h1`\n  font-family: \"Plus Jakarta Sans\", sans-serif;\n  font-weight: 700;\n  font-size: 28px;\n  color: #d7dfe5;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nconst ScoreCard = styled.div`\n  background-color: #121c2b;\n  border-radius: 22px;\n  padding: 30px;\n  width: 100%;\n  margin-bottom: 20px;\n  text-align: center;\n`;\n\nconst ScoreText = styled.p`\n  font-family: \"Plus Jakarta Sans\", sans-serif;\n  font-weight: 700;\n  font-size: 36px;\n  color: #d7dfe5;\n  margin-bottom: 10px;\n`;\n\nconst ScoreDescription = styled.p`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-size: 16px;\n  color: #a7b7c2;\n`;\n\nconst QuestionList = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  overflow-y: auto;\n  flex: 1;\n  padding-right: 10px;\n\n  /* 스크롤바 스타일링 */\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: rgba(215, 223, 228, 0.05);\n    border-radius: 4px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: rgba(215, 223, 228, 0.15);\n    border-radius: 4px;\n\n    &:hover {\n      background: rgba(215, 223, 228, 0.25);\n    }\n  }\n`;\n\nconst QuestionItem = styled.div`\n  background-color: #121c2b;\n  border-radius: 12px;\n  padding: 20px;\n  border-left: 4px solid\n    ${(props) => (props.$isCorrect ? \"#2ecc71\" : \"#e74c3c\")};\n`;\n\nconst QuestionText = styled.p`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-size: 15px;\n  color: #d7dfe5;\n  margin-bottom: 10px;\n`;\n\nconst AnswerText = styled.p`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-size: 14px;\n  color: ${(props) => (props.$isCorrect ? \"#2ecc71\" : \"#e74c3c\")};\n  margin-bottom: 10px;\n`;\n\nconst ExplanationText = styled.p`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-size: 14px;\n  color: #a7b7c2;\n  font-style: italic;\n  margin-top: 10px;\n`;\n\nconst Button = styled.button`\n  font-family: \"Plus Jakarta Sans\", sans-serif;\n  font-weight: 500;\n  font-size: 15px;\n  color: #000000;\n  background-color: #2395e9;\n  border: none;\n  border-radius: 22px;\n  padding: 10px 20px;\n  cursor: pointer;\n  margin-top: 30px;\n\n  &:hover {\n    background-color: #1b7ac2;\n  }\n`;\n\nconst NoQuestionsText = styled.p`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-size: 16px;\n  color: #d7dfe5;\n  text-align: center;\n  margin: 30px 0;\n`;\n\nconst QuizResult = ({\n  score,\n  totalQuestions,\n  userAnswers,\n  quizData,\n  answeredIds,\n  onRetry,\n}) => {\n  const navigate = useNavigate();\n\n  const handleRetryClick = () => {\n    if (onRetry) {\n      onRetry();\n    } else {\n      navigate(\"/quiz\");\n    }\n  };\n\n  const percentage =\n    totalQuestions > 0 ? Math.round((score / totalQuestions) * 100) : 0;\n\n  return (\n    <ResultContainer>\n      <Title>퀴즈 결과</Title>\n\n      <ScoreCard>\n        <ScoreText>\n          {score} / {totalQuestions} 문제 정답\n        </ScoreText>\n        <ScoreDescription>정답률: {percentage}%</ScoreDescription>\n      </ScoreCard>\n\n      <QuestionList>\n        {answeredIds.length === 0 ? (\n          <NoQuestionsText>아직 풀었던 문제가 없습니다.</NoQuestionsText>\n        ) : (\n          answeredIds.map((id, index) => {\n            const question = quizData[id];\n            const userAnswer = userAnswers[id];\n            const isCorrect = userAnswer === question.correctAnswer;\n\n            return (\n              <QuestionItem key={question.id} $isCorrect={isCorrect}>\n                <QuestionText>\n                  {index + 1}. {question.question}\n                </QuestionText>\n                <AnswerText $isCorrect={isCorrect}>\n                  {isCorrect\n                    ? `정답: ${question.correctAnswer}`\n                    : `오답: ${userAnswer || \"응답 없음\"} (정답: ${\n                        question.correctAnswer\n                      })`}\n                </AnswerText>\n                <ExplanationText>{question.explanation}</ExplanationText>\n              </QuestionItem>\n            );\n          })\n        )}\n      </QuestionList>\n\n      <Button onClick={handleRetryClick}>다시 풀기</Button>\n    </ResultContainer>\n  );\n};\n\nexport default QuizResult;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
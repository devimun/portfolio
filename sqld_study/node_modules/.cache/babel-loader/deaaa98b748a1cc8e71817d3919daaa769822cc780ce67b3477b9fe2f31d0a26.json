{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jun/Desktop/sqld_study/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13;/** @format */import styled from\"styled-components\";import{exam1,exam2}from\"../../data/mock_exam\";import{useState,useEffect,useRef}from\"react\";import MockTestSidebar from\"./MockTestSidebar\";import QuestionDisplay from\"./QuestionDisplay\";import MockTestTimer from\"./MockTestTimer\";import MobileHeader,{MobileHeaderSpacer}from\"../layout/MobileHeader\";import MockTestResults from\"./MockTestResults\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const MockTestPageContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 100%;\\n  padding: 0;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: flex-start;\\n  position: relative;\\n\"])));const TestSelectionContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  height: 100%;\\n  width: 100%;\\n  padding: 20px;\\n\\n  @media (max-width: 768px) {\\n    padding: 15px;\\n  }\\n\"])));const TestSelectionHeading=styled.h1(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  color: #d7dfe5;\\n  margin-bottom: 30px;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  text-align: center;\\n\\n  @media (max-width: 768px) {\\n    font-size: 24px;\\n    margin-bottom: 20px;\\n  }\\n\\n  @media (max-width: 480px) {\\n    font-size: 20px;\\n  }\\n\"])));const TestRouteBtn=styled.button(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-weight: 500;\\n  font-size: 15px;\\n  color: #d7dfe5;\\n  padding: 12px 24px;\\n  background-color: transparent;\\n  border: 1.5px solid rgba(214, 224, 230, 0.2);\\n  border-radius: 12px;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  margin: 10px;\\n  width: 200px;\\n\\n  &:hover {\\n    background-color: rgba(35, 149, 233, 0.4);\\n  }\\n\\n  @media (max-width: 768px) {\\n    width: 90%;\\n    max-width: 280px;\\n    padding: 10px 16px;\\n    font-size: 14px;\\n  }\\n\"])));const StartButton=styled(TestRouteBtn)(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  background-color: rgba(35, 149, 233, 0.6);\\n  margin-top: 30px;\\n\\n  &:hover {\\n    background-color: rgba(35, 149, 233, 0.8);\\n  }\\n\\n  @media (max-width: 768px) {\\n    margin-top: 20px;\\n  }\\n\"])));const TestContainer=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: flex;\\n  width: 100%;\\n  height: 100%;\\n  position: relative;\\n\"])));const ContentContainer=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 20px;\\n  transition: margin-left 0.3s ease;\\n  margin-left: \",\";\\n\\n  @media (max-width: 1200px) {\\n    padding: 16px;\\n    margin-left: \",\";\\n  }\\n\\n  @media (max-width: 768px) {\\n    padding: 16px 12px;\\n    margin-left: 0;\\n    padding-top: 120px; /* \\uBAA8\\uBC14\\uC77C \\uD0D1\\uBC14 \\uC544\\uB798 \\uCD94\\uAC00 \\uD328\\uB529 */\\n  }\\n\"])),props=>props.sidebarVisible?\"350px\":\"0\",props=>props.sidebarVisible?\"350px\":\"0\");const ShowSidebarButton=styled.button(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  position: fixed;\\n  top: 20px;\\n  left: 20px;\\n  background-color: rgba(35, 149, 233, 0.4);\\n  color: #d7dfe5;\\n  border: none;\\n  border-radius: 8px;\\n  padding: 10px 16px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  z-index: 50;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-weight: 500;\\n\\n  &:hover {\\n    background-color: rgba(35, 149, 233, 0.6);\\n  }\\n\\n  svg {\\n    margin-right: 8px;\\n  }\\n\\n  @media (max-width: 768px) {\\n    top: 10px;\\n    left: 10px;\\n    padding: 8px 12px;\\n    font-size: 14px;\\n  }\\n\"])));const MobileTopBar=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  display: none;\\n\\n  @media (max-width: 768px) {\\n    display: flex;\\n    position: fixed;\\n    top: 103px; /* MobileHeader \\uB192\\uC774\\uC640 \\uC77C\\uCE58 */\\n    left: 0;\\n    width: 100%;\\n    background-color: #081017;\\n    border-bottom: 1px solid rgba(214, 224, 230, 0.1);\\n    padding: 10px;\\n    z-index: 90; /* MobileHeader\\uBCF4\\uB2E4 \\uB0AE\\uC740 z-index */\\n    flex-direction: column;\\n    height: auto; /* \\uB192\\uC774 \\uC790\\uB3D9 \\uC870\\uC815\\uC73C\\uB85C \\uBCC0\\uACBD */\\n    min-height: 60px; /* \\uCD5C\\uC18C \\uB192\\uC774 \\uC124\\uC815 */\\n    box-sizing: border-box;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* \\uADF8\\uB9BC\\uC790 \\uCD94\\uAC00\\uB85C \\uAC00\\uC2DC\\uC131 \\uD5A5\\uC0C1 */\\n  }\\n\"])));const MobileTopBarContent=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  width: 100%;\\n\"])));const MobileQuestionScroller=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  display: flex;\\n  overflow-x: auto;\\n  padding: 10px 5px;\\n  margin-top: 8px;\\n  gap: 6px;\\n  width: 100%;\\n\\n  /* \\uC2A4\\uD06C\\uB864\\uBC14 \\uC228\\uAE30\\uAE30 */\\n  -ms-overflow-style: none; /* IE and Edge */\\n  scrollbar-width: none; /* Firefox */\\n\\n  &::-webkit-scrollbar {\\n    display: none; /* Chrome, Safari, Opera */\\n  }\\n\"])));const MobileQuestionDot=styled.button(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  min-width: 36px;\\n  height: 36px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  background-color: \",\";\\n  border-radius: 18px;\\n  color: #d7dfe5;\\n  font-weight: 600;\\n  font-size: 14px;\\n  border: none;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n\"])),props=>props.isCurrent?\"rgba(35, 149, 233, 0.7)\":props.isAnswered?\"rgba(60, 179, 113, 0.4)\":\"rgba(215, 223, 228, 0.08)\");const MobileTestTitle=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  color: #d7dfe5;\\n  font-weight: 600;\\n  font-size: 14px;\\n\"])));// MobileTopBar 높이만큼 공간을 확보하는 스페이서\nconst MobileTopBarSpacer=styled.div(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  display: none;\\n\\n  @media (max-width: 768px) {\\n    display: block;\\n    height: auto; /* \\uC790\\uB3D9 \\uB192\\uC774\\uB85C \\uBCC0\\uACBD */\\n    min-height: 120px; /* \\uBAA8\\uBC14\\uC77C \\uD0D1\\uBC14 \\uB192\\uC774\\uB97C \\uCDA9\\uBD84\\uD788 \\uD655\\uBCF4\\uD558\\uAE30 \\uC704\\uD574 \\uC99D\\uAC00 */\\n  }\\n\"])));const ResultContainer=styled.div(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  padding: 20px;\\n  background-color: rgba(12, 20, 28, 0.5);\\n  border-radius: 12px;\\n  margin-top: 20px;\\n  color: #d7dfe5;\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n\\n  h2 {\\n    color: #2395e9;\\n    margin-bottom: 15px;\\n    font-weight: 700;\\n  }\\n\\n  p {\\n    margin-bottom: 8px;\\n    padding: 8px;\\n    border-radius: 6px;\\n\\n    &:hover {\\n      background: rgba(215, 223, 228, 0.05);\\n    }\\n  }\\n\\n  @media (max-width: 768px) {\\n    padding: 16px;\\n    margin-top: 16px;\\n\\n    h2 {\\n      font-size: 18px;\\n      margin-bottom: 12px;\\n    }\\n\\n    p {\\n      font-size: 14px;\\n      margin-bottom: 6px;\\n      padding: 6px;\\n    }\\n  }\\n\"])));// 모바일 환경 감지 hook 추가\nconst useMobileDetection=()=>{const[isMobile,setIsMobile]=useState(false);useEffect(()=>{const checkMobile=()=>{setIsMobile(window.innerWidth<768);};checkMobile();window.addEventListener(\"resize\",checkMobile);return()=>window.removeEventListener(\"resize\",checkMobile);},[]);return isMobile;};const MockTestPage=()=>{const testList=[exam1,exam2];const[selectedTest,setSelectedTest]=useState(null);const[activeTest,setActiveTest]=useState(null);const[currentQuestion,setCurrentQuestion]=useState(0);const[userAnswers,setUserAnswers]=useState([]);const[sidebarVisible,setSidebarVisible]=useState(true);const[timeLeft,setTimeLeft]=useState(90*60);// 90분을 초 단위로\nconst[testFinished,setTestFinished]=useState(false);const[showResultsPage,setShowResultsPage]=useState(false);const timerRef=useRef(null);const mobileQuestionScrollRef=useRef(null);// 모바일 감지 추가\nconst isMobile=useMobileDetection();// 시험 시작 함수\nconst startTest=()=>{if(selectedTest){setActiveTest(selectedTest);setUserAnswers(new Array(selectedTest.length).fill(null));setTestFinished(false);setShowResultsPage(false);// 타이머 시작\ntimerRef.current=setInterval(()=>{setTimeLeft(prev=>{if(prev<=1){clearInterval(timerRef.current);setTestFinished(true);setShowResultsPage(true);return 0;}return prev-1;});},1000);}};// 컴포넌트 언마운트 시 타이머 정리\nuseEffect(()=>{return()=>{if(timerRef.current){clearInterval(timerRef.current);}};},[]);// 모바일 뷰에서 사이드바 표시 시 스크롤 방지\nuseEffect(()=>{const handleResize=()=>{if(window.innerWidth<=768&&sidebarVisible){document.body.style.overflow=\"hidden\";}else{document.body.style.overflow=\"auto\";}};handleResize();window.addEventListener(\"resize\",handleResize);return()=>{window.removeEventListener(\"resize\",handleResize);document.body.style.overflow=\"auto\";};},[sidebarVisible]);// 모바일 문제 스크롤러에서 현재 문제가 보이도록 스크롤 조정\nuseEffect(()=>{if(mobileQuestionScrollRef.current&&window.innerWidth<=768){const scrollContainer=mobileQuestionScrollRef.current;const selectedElement=scrollContainer.children[currentQuestion];if(selectedElement){const containerWidth=scrollContainer.offsetWidth;const elementLeft=selectedElement.offsetLeft;const elementWidth=selectedElement.offsetWidth;// 중앙 정렬 스크롤 계산\nconst scrollPosition=elementLeft-containerWidth/2+elementWidth/2;scrollContainer.scrollTo({left:scrollPosition,behavior:\"smooth\"});}}},[currentQuestion]);// 답안 선택 함수\nconst handleAnswerSelect=(questionIndex,answerIndex)=>{const newAnswers=[...userAnswers];newAnswers[questionIndex]=answerIndex;setUserAnswers(newAnswers);};// 문제 이동 함수\nconst goToQuestion=index=>{setCurrentQuestion(index);// 모바일에서 문제 선택 시 사이드바 닫기\nif(window.innerWidth<=768){setSidebarVisible(false);}};// 시험 제출 함수\nconst submitTest=()=>{clearInterval(timerRef.current);setTestFinished(true);setShowResultsPage(true);};// 모의고사 선택 화면으로 돌아가기\nconst handleReturnToSelection=()=>{setActiveTest(null);setSelectedTest(null);setTimeLeft(90*60);setTestFinished(false);setShowResultsPage(false);};// 사이드바 토글 함수\nconst toggleSidebar=()=>{// 모바일에서는 사이드바 토글이 필요 없으므로 데스크탑에서만 동작\nif(!isMobile){setSidebarVisible(!sidebarVisible);}};// 시험 결과 계산\nconst calculateResults=()=>{if(!testFinished||!activeTest)return null;let correctCount=0;activeTest.forEach((question,idx)=>{if(userAnswers[idx]===question.answer){correctCount++;}});return{totalQuestions:activeTest.length,correctAnswers:correctCount,score:Math.round(correctCount/activeTest.length*100)};};const results=calculateResults();if(!activeTest){return/*#__PURE__*/_jsxs(MockTestPageContainer,{children:[/*#__PURE__*/_jsx(MobileHeader,{}),/*#__PURE__*/_jsx(MobileHeaderSpacer,{}),/*#__PURE__*/_jsxs(TestSelectionContainer,{children:[/*#__PURE__*/_jsx(TestSelectionHeading,{children:\"\\uC2E4\\uC804 \\uBAA8\\uC758\\uACE0\\uC0AC \\uC120\\uD0DD\"}),testList.map((exam,idx)=>/*#__PURE__*/_jsx(TestRouteBtn,{onClick:()=>setSelectedTest(exam),style:selectedTest===exam?{backgroundColor:\"rgba(35, 149, 233, 0.4)\"}:{},children:\"\".concat(idx+1,\"\\uD68C \\uC2E4\\uC804 \\uBAA8\\uC758\\uACE0\\uC0AC\")},idx)),selectedTest&&/*#__PURE__*/_jsx(StartButton,{onClick:startTest,children:\"\\uBAA8\\uC758\\uACE0\\uC0AC \\uC2DC\\uC791\\uD558\\uAE30\"})]})]});}// 결과 페이지 표시\nif(testFinished&&showResultsPage&&results){return/*#__PURE__*/_jsxs(MockTestPageContainer,{children:[/*#__PURE__*/_jsx(MobileHeader,{}),/*#__PURE__*/_jsx(MobileHeaderSpacer,{}),/*#__PURE__*/_jsx(ContentContainer,{sidebarVisible:false,children:/*#__PURE__*/_jsx(MockTestResults,{questions:activeTest,userAnswers:userAnswers,totalQuestions:results.totalQuestions,correctAnswers:results.correctAnswers,score:results.score,onReturnToSelection:handleReturnToSelection})})]});}return/*#__PURE__*/_jsxs(MockTestPageContainer,{children:[/*#__PURE__*/_jsx(MobileHeader,{}),/*#__PURE__*/_jsx(MobileHeaderSpacer,{}),/*#__PURE__*/_jsxs(TestContainer,{children:[!isMobile&&sidebarVisible?/*#__PURE__*/_jsx(MockTestSidebar,{questions:activeTest,currentQuestion:currentQuestion,userAnswers:userAnswers,goToQuestion:goToQuestion,testNumber:testList.indexOf(activeTest)+1,timeLeft:timeLeft,toggleSidebar:toggleSidebar}):!isMobile&&/*#__PURE__*/_jsxs(ShowSidebarButton,{onClick:toggleSidebar,children:[/*#__PURE__*/_jsxs(\"svg\",{width:\"16\",height:\"16\",viewBox:\"0 0 16 16\",fill:\"none\",xmlns:\"http://www.w3.org/2000/svg\",children:[/*#__PURE__*/_jsx(\"path\",{d:\"M1 4C1 2.34315 2.34315 1 4 1H12C13.6569 1 15 2.34315 15 4V12C15 13.6569 13.6569 15 12 15H4C2.34315 15 1 13.6569 1 12V4Z\",stroke:\"currentColor\",strokeWidth:\"1.5\",strokeLinecap:\"round\",strokeLinejoin:\"round\"}),/*#__PURE__*/_jsx(\"path\",{d:\"M5 1V15\",stroke:\"currentColor\",strokeWidth:\"1.5\",strokeLinecap:\"round\",strokeLinejoin:\"round\"})]}),\"\\uC0AC\\uC774\\uB4DC\\uBC14 \\uD45C\\uC2DC\"]}),isMobile&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(MobileTopBar,{children:[/*#__PURE__*/_jsxs(MobileTopBarContent,{children:[/*#__PURE__*/_jsxs(MobileTestTitle,{children:[\"\\uC2E4\\uC804 \\uBAA8\\uC758\\uACE0\\uC0AC \",testList.indexOf(activeTest)+1,\"\\uD68C\"]}),/*#__PURE__*/_jsx(MockTestTimer,{timeLeft:timeLeft,isTopBar:true,sidebarVisible:false})]}),/*#__PURE__*/_jsx(MobileQuestionScroller,{ref:mobileQuestionScrollRef,children:activeTest.map((_,index)=>/*#__PURE__*/_jsx(MobileQuestionDot,{isCurrent:index===currentQuestion,isAnswered:userAnswers[index]!==null,onClick:()=>goToQuestion(index),children:index+1},index))})]}),/*#__PURE__*/_jsx(MobileTopBarSpacer,{})]}),/*#__PURE__*/_jsxs(ContentContainer,{sidebarVisible:!isMobile&&sidebarVisible,children:[/*#__PURE__*/_jsx(QuestionDisplay,{question:activeTest[currentQuestion],questionIndex:currentQuestion,totalQuestions:activeTest.length,selectedAnswer:userAnswers[currentQuestion],onAnswerSelect:answer=>handleAnswerSelect(currentQuestion,answer),onPrevious:()=>currentQuestion>0&&setCurrentQuestion(currentQuestion-1),onNext:()=>currentQuestion<activeTest.length-1&&setCurrentQuestion(currentQuestion+1),onSubmit:submitTest,isLast:currentQuestion===activeTest.length-1,testFinished:testFinished}),testFinished&&!showResultsPage&&results&&/*#__PURE__*/_jsxs(ResultContainer,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uBAA8\\uC758\\uACE0\\uC0AC \\uACB0\\uACFC\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uCD1D \\uBB38\\uD56D \\uC218: \",results.totalQuestions,\"\\uAC1C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC815\\uB2F5 \\uC218: \",results.correctAnswers,\"\\uAC1C\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC810\\uC218: \",results.score,\"\\uC810\"]})]})]})]})]});};export default MockTestPage;","map":{"version":3,"names":["styled","exam1","exam2","useState","useEffect","useRef","MockTestSidebar","QuestionDisplay","MockTestTimer","MobileHeader","MobileHeaderSpacer","MockTestResults","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MockTestPageContainer","div","_templateObject","_taggedTemplateLiteral","TestSelectionContainer","_templateObject2","TestSelectionHeading","h1","_templateObject3","TestRouteBtn","button","_templateObject4","StartButton","_templateObject5","TestContainer","_templateObject6","ContentContainer","_templateObject7","props","sidebarVisible","ShowSidebarButton","_templateObject8","MobileTopBar","_templateObject9","MobileTopBarContent","_templateObject0","MobileQuestionScroller","_templateObject1","MobileQuestionDot","_templateObject10","isCurrent","isAnswered","MobileTestTitle","_templateObject11","MobileTopBarSpacer","_templateObject12","ResultContainer","_templateObject13","useMobileDetection","isMobile","setIsMobile","checkMobile","window","innerWidth","addEventListener","removeEventListener","MockTestPage","testList","selectedTest","setSelectedTest","activeTest","setActiveTest","currentQuestion","setCurrentQuestion","userAnswers","setUserAnswers","setSidebarVisible","timeLeft","setTimeLeft","testFinished","setTestFinished","showResultsPage","setShowResultsPage","timerRef","mobileQuestionScrollRef","startTest","Array","length","fill","current","setInterval","prev","clearInterval","handleResize","document","body","style","overflow","scrollContainer","selectedElement","children","containerWidth","offsetWidth","elementLeft","offsetLeft","elementWidth","scrollPosition","scrollTo","left","behavior","handleAnswerSelect","questionIndex","answerIndex","newAnswers","goToQuestion","index","submitTest","handleReturnToSelection","toggleSidebar","calculateResults","correctCount","forEach","question","idx","answer","totalQuestions","correctAnswers","score","Math","round","results","map","exam","onClick","backgroundColor","concat","questions","onReturnToSelection","testNumber","indexOf","width","height","viewBox","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","isTopBar","ref","_","selectedAnswer","onAnswerSelect","onPrevious","onNext","onSubmit","isLast"],"sources":["/Users/jun/Desktop/sqld_study/src/components/mock_test/MockTestPage.js"],"sourcesContent":["/** @format */\n\nimport styled from \"styled-components\";\nimport {exam1, exam2} from \"../../data/mock_exam\";\nimport {useState, useEffect, useRef} from \"react\";\nimport MockTestSidebar from \"./MockTestSidebar\";\nimport QuestionDisplay from \"./QuestionDisplay\";\nimport MockTestTimer from \"./MockTestTimer\";\nimport MobileHeader, {MobileHeaderSpacer} from \"../layout/MobileHeader\";\nimport MockTestResults from \"./MockTestResults\";\n\nconst MockTestPageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: flex-start;\n  position: relative;\n`;\n\nconst TestSelectionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n  padding: 20px;\n\n  @media (max-width: 768px) {\n    padding: 15px;\n  }\n`;\n\nconst TestSelectionHeading = styled.h1`\n  color: #d7dfe5;\n  margin-bottom: 30px;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  text-align: center;\n\n  @media (max-width: 768px) {\n    font-size: 24px;\n    margin-bottom: 20px;\n  }\n\n  @media (max-width: 480px) {\n    font-size: 20px;\n  }\n`;\n\nconst TestRouteBtn = styled.button`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-weight: 500;\n  font-size: 15px;\n  color: #d7dfe5;\n  padding: 12px 24px;\n  background-color: transparent;\n  border: 1.5px solid rgba(214, 224, 230, 0.2);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  margin: 10px;\n  width: 200px;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.4);\n  }\n\n  @media (max-width: 768px) {\n    width: 90%;\n    max-width: 280px;\n    padding: 10px 16px;\n    font-size: 14px;\n  }\n`;\n\nconst StartButton = styled(TestRouteBtn)`\n  background-color: rgba(35, 149, 233, 0.6);\n  margin-top: 30px;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.8);\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 20px;\n  }\n`;\n\nconst TestContainer = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nconst ContentContainer = styled.div`\n  flex: 1;\n  padding: 20px;\n  transition: margin-left 0.3s ease;\n  margin-left: ${(props) => (props.sidebarVisible ? \"350px\" : \"0\")};\n\n  @media (max-width: 1200px) {\n    padding: 16px;\n    margin-left: ${(props) => (props.sidebarVisible ? \"350px\" : \"0\")};\n  }\n\n  @media (max-width: 768px) {\n    padding: 16px 12px;\n    margin-left: 0;\n    padding-top: 120px; /* 모바일 탑바 아래 추가 패딩 */\n  }\n`;\n\nconst ShowSidebarButton = styled.button`\n  position: fixed;\n  top: 20px;\n  left: 20px;\n  background-color: rgba(35, 149, 233, 0.4);\n  color: #d7dfe5;\n  border: none;\n  border-radius: 8px;\n  padding: 10px 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  z-index: 50;\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-weight: 500;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.6);\n  }\n\n  svg {\n    margin-right: 8px;\n  }\n\n  @media (max-width: 768px) {\n    top: 10px;\n    left: 10px;\n    padding: 8px 12px;\n    font-size: 14px;\n  }\n`;\n\nconst MobileTopBar = styled.div`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: flex;\n    position: fixed;\n    top: 103px; /* MobileHeader 높이와 일치 */\n    left: 0;\n    width: 100%;\n    background-color: #081017;\n    border-bottom: 1px solid rgba(214, 224, 230, 0.1);\n    padding: 10px;\n    z-index: 90; /* MobileHeader보다 낮은 z-index */\n    flex-direction: column;\n    height: auto; /* 높이 자동 조정으로 변경 */\n    min-height: 60px; /* 최소 높이 설정 */\n    box-sizing: border-box;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* 그림자 추가로 가시성 향상 */\n  }\n`;\n\nconst MobileTopBarContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n`;\n\nconst MobileQuestionScroller = styled.div`\n  display: flex;\n  overflow-x: auto;\n  padding: 10px 5px;\n  margin-top: 8px;\n  gap: 6px;\n  width: 100%;\n\n  /* 스크롤바 숨기기 */\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n\n  &::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera */\n  }\n`;\n\nconst MobileQuestionDot = styled.button`\n  min-width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${(props) =>\n    props.isCurrent\n      ? \"rgba(35, 149, 233, 0.7)\"\n      : props.isAnswered\n      ? \"rgba(60, 179, 113, 0.4)\"\n      : \"rgba(215, 223, 228, 0.08)\"};\n  border-radius: 18px;\n  color: #d7dfe5;\n  font-weight: 600;\n  font-size: 14px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  font-family: \"IBM Plex Sans\", sans-serif;\n`;\n\nconst MobileTestTitle = styled.div`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  color: #d7dfe5;\n  font-weight: 600;\n  font-size: 14px;\n`;\n\n// MobileTopBar 높이만큼 공간을 확보하는 스페이서\nconst MobileTopBarSpacer = styled.div`\n  display: none;\n\n  @media (max-width: 768px) {\n    display: block;\n    height: auto; /* 자동 높이로 변경 */\n    min-height: 120px; /* 모바일 탑바 높이를 충분히 확보하기 위해 증가 */\n  }\n`;\n\nconst ResultContainer = styled.div`\n  width: 100%;\n  padding: 20px;\n  background-color: rgba(12, 20, 28, 0.5);\n  border-radius: 12px;\n  margin-top: 20px;\n  color: #d7dfe5;\n  font-family: \"IBM Plex Sans\", sans-serif;\n\n  h2 {\n    color: #2395e9;\n    margin-bottom: 15px;\n    font-weight: 700;\n  }\n\n  p {\n    margin-bottom: 8px;\n    padding: 8px;\n    border-radius: 6px;\n\n    &:hover {\n      background: rgba(215, 223, 228, 0.05);\n    }\n  }\n\n  @media (max-width: 768px) {\n    padding: 16px;\n    margin-top: 16px;\n\n    h2 {\n      font-size: 18px;\n      margin-bottom: 12px;\n    }\n\n    p {\n      font-size: 14px;\n      margin-bottom: 6px;\n      padding: 6px;\n    }\n  }\n`;\n\n// 모바일 환경 감지 hook 추가\nconst useMobileDetection = () => {\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    checkMobile();\n    window.addEventListener(\"resize\", checkMobile);\n    return () => window.removeEventListener(\"resize\", checkMobile);\n  }, []);\n\n  return isMobile;\n};\n\nconst MockTestPage = () => {\n  const testList = [exam1, exam2];\n  const [selectedTest, setSelectedTest] = useState(null);\n  const [activeTest, setActiveTest] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [sidebarVisible, setSidebarVisible] = useState(true);\n  const [timeLeft, setTimeLeft] = useState(90 * 60); // 90분을 초 단위로\n  const [testFinished, setTestFinished] = useState(false);\n  const [showResultsPage, setShowResultsPage] = useState(false);\n\n  const timerRef = useRef(null);\n  const mobileQuestionScrollRef = useRef(null);\n\n  // 모바일 감지 추가\n  const isMobile = useMobileDetection();\n\n  // 시험 시작 함수\n  const startTest = () => {\n    if (selectedTest) {\n      setActiveTest(selectedTest);\n      setUserAnswers(new Array(selectedTest.length).fill(null));\n      setTestFinished(false);\n      setShowResultsPage(false);\n\n      // 타이머 시작\n      timerRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            clearInterval(timerRef.current);\n            setTestFinished(true);\n            setShowResultsPage(true);\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    }\n  };\n\n  // 컴포넌트 언마운트 시 타이머 정리\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  // 모바일 뷰에서 사이드바 표시 시 스크롤 방지\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 768 && sidebarVisible) {\n        document.body.style.overflow = \"hidden\";\n      } else {\n        document.body.style.overflow = \"auto\";\n      }\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n      document.body.style.overflow = \"auto\";\n    };\n  }, [sidebarVisible]);\n\n  // 모바일 문제 스크롤러에서 현재 문제가 보이도록 스크롤 조정\n  useEffect(() => {\n    if (mobileQuestionScrollRef.current && window.innerWidth <= 768) {\n      const scrollContainer = mobileQuestionScrollRef.current;\n      const selectedElement = scrollContainer.children[currentQuestion];\n\n      if (selectedElement) {\n        const containerWidth = scrollContainer.offsetWidth;\n        const elementLeft = selectedElement.offsetLeft;\n        const elementWidth = selectedElement.offsetWidth;\n\n        // 중앙 정렬 스크롤 계산\n        const scrollPosition =\n          elementLeft - containerWidth / 2 + elementWidth / 2;\n        scrollContainer.scrollTo({\n          left: scrollPosition,\n          behavior: \"smooth\",\n        });\n      }\n    }\n  }, [currentQuestion]);\n\n  // 답안 선택 함수\n  const handleAnswerSelect = (questionIndex, answerIndex) => {\n    const newAnswers = [...userAnswers];\n    newAnswers[questionIndex] = answerIndex;\n    setUserAnswers(newAnswers);\n  };\n\n  // 문제 이동 함수\n  const goToQuestion = (index) => {\n    setCurrentQuestion(index);\n\n    // 모바일에서 문제 선택 시 사이드바 닫기\n    if (window.innerWidth <= 768) {\n      setSidebarVisible(false);\n    }\n  };\n\n  // 시험 제출 함수\n  const submitTest = () => {\n    clearInterval(timerRef.current);\n    setTestFinished(true);\n    setShowResultsPage(true);\n  };\n\n  // 모의고사 선택 화면으로 돌아가기\n  const handleReturnToSelection = () => {\n    setActiveTest(null);\n    setSelectedTest(null);\n    setTimeLeft(90 * 60);\n    setTestFinished(false);\n    setShowResultsPage(false);\n  };\n\n  // 사이드바 토글 함수\n  const toggleSidebar = () => {\n    // 모바일에서는 사이드바 토글이 필요 없으므로 데스크탑에서만 동작\n    if (!isMobile) {\n      setSidebarVisible(!sidebarVisible);\n    }\n  };\n\n  // 시험 결과 계산\n  const calculateResults = () => {\n    if (!testFinished || !activeTest) return null;\n\n    let correctCount = 0;\n    activeTest.forEach((question, idx) => {\n      if (userAnswers[idx] === question.answer) {\n        correctCount++;\n      }\n    });\n\n    return {\n      totalQuestions: activeTest.length,\n      correctAnswers: correctCount,\n      score: Math.round((correctCount / activeTest.length) * 100),\n    };\n  };\n\n  const results = calculateResults();\n\n  if (!activeTest) {\n    return (\n      <MockTestPageContainer>\n        <MobileHeader />\n        <MobileHeaderSpacer />\n        <TestSelectionContainer>\n          <TestSelectionHeading>실전 모의고사 선택</TestSelectionHeading>\n          {testList.map((exam, idx) => (\n            <TestRouteBtn\n              key={idx}\n              onClick={() => setSelectedTest(exam)}\n              style={\n                selectedTest === exam\n                  ? {backgroundColor: \"rgba(35, 149, 233, 0.4)\"}\n                  : {}\n              }\n            >\n              {`${idx + 1}회 실전 모의고사`}\n            </TestRouteBtn>\n          ))}\n          {selectedTest && (\n            <StartButton onClick={startTest}>모의고사 시작하기</StartButton>\n          )}\n        </TestSelectionContainer>\n      </MockTestPageContainer>\n    );\n  }\n\n  // 결과 페이지 표시\n  if (testFinished && showResultsPage && results) {\n    return (\n      <MockTestPageContainer>\n        <MobileHeader />\n        <MobileHeaderSpacer />\n        <ContentContainer sidebarVisible={false}>\n          <MockTestResults\n            questions={activeTest}\n            userAnswers={userAnswers}\n            totalQuestions={results.totalQuestions}\n            correctAnswers={results.correctAnswers}\n            score={results.score}\n            onReturnToSelection={handleReturnToSelection}\n          />\n        </ContentContainer>\n      </MockTestPageContainer>\n    );\n  }\n\n  return (\n    <MockTestPageContainer>\n      <MobileHeader />\n      <MobileHeaderSpacer />\n      <TestContainer>\n        {/* 데스크탑 모드에서만 사이드바 표시 */}\n        {!isMobile && sidebarVisible ? (\n          <MockTestSidebar\n            questions={activeTest}\n            currentQuestion={currentQuestion}\n            userAnswers={userAnswers}\n            goToQuestion={goToQuestion}\n            testNumber={testList.indexOf(activeTest) + 1}\n            timeLeft={timeLeft}\n            toggleSidebar={toggleSidebar}\n          />\n        ) : (\n          !isMobile && (\n            <ShowSidebarButton onClick={toggleSidebar}>\n              <svg\n                width=\"16\"\n                height=\"16\"\n                viewBox=\"0 0 16 16\"\n                fill=\"none\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  d=\"M1 4C1 2.34315 2.34315 1 4 1H12C13.6569 1 15 2.34315 15 4V12C15 13.6569 13.6569 15 12 15H4C2.34315 15 1 13.6569 1 12V4Z\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"1.5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M5 1V15\"\n                  stroke=\"currentColor\"\n                  strokeWidth=\"1.5\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n              사이드바 표시\n            </ShowSidebarButton>\n          )\n        )}\n\n        {/* 모바일 모드에서는 항상 탑바 표시 */}\n        {isMobile && (\n          <>\n            {/* 모바일 전용 상단 바 */}\n            <MobileTopBar>\n              <MobileTopBarContent>\n                <MobileTestTitle>\n                  실전 모의고사 {testList.indexOf(activeTest) + 1}회\n                </MobileTestTitle>\n                <MockTestTimer\n                  timeLeft={timeLeft}\n                  isTopBar={true}\n                  sidebarVisible={false}\n                />\n              </MobileTopBarContent>\n\n              <MobileQuestionScroller ref={mobileQuestionScrollRef}>\n                {activeTest.map((_, index) => (\n                  <MobileQuestionDot\n                    key={index}\n                    isCurrent={index === currentQuestion}\n                    isAnswered={userAnswers[index] !== null}\n                    onClick={() => goToQuestion(index)}\n                  >\n                    {index + 1}\n                  </MobileQuestionDot>\n                ))}\n              </MobileQuestionScroller>\n            </MobileTopBar>\n            <MobileTopBarSpacer />\n          </>\n        )}\n\n        <ContentContainer sidebarVisible={!isMobile && sidebarVisible}>\n          <QuestionDisplay\n            question={activeTest[currentQuestion]}\n            questionIndex={currentQuestion}\n            totalQuestions={activeTest.length}\n            selectedAnswer={userAnswers[currentQuestion]}\n            onAnswerSelect={(answer) =>\n              handleAnswerSelect(currentQuestion, answer)\n            }\n            onPrevious={() =>\n              currentQuestion > 0 && setCurrentQuestion(currentQuestion - 1)\n            }\n            onNext={() =>\n              currentQuestion < activeTest.length - 1 &&\n              setCurrentQuestion(currentQuestion + 1)\n            }\n            onSubmit={submitTest}\n            isLast={currentQuestion === activeTest.length - 1}\n            testFinished={testFinished}\n          />\n\n          {testFinished && !showResultsPage && results && (\n            <ResultContainer>\n              <h2>모의고사 결과</h2>\n              <p>총 문항 수: {results.totalQuestions}개</p>\n              <p>정답 수: {results.correctAnswers}개</p>\n              <p>점수: {results.score}점</p>\n            </ResultContainer>\n          )}\n        </ContentContainer>\n      </TestContainer>\n    </MockTestPageContainer>\n  );\n};\n\nexport default MockTestPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
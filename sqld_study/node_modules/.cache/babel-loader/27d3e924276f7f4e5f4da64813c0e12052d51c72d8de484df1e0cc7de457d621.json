{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jun/Desktop/sqld_study/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1;import React,{useState,useEffect}from\"react\";import styled from\"styled-components\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const QuizContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 20px;\\n  width: 100%;\\n  height: calc(100vh - 140px); /* \\uD5E4\\uB354\\uC640 \\uD328\\uB529\\uC744 \\uACE0\\uB824\\uD55C \\uB192\\uC774 */\\n  overflow: hidden;\\n\"])));const CategoryText=styled.p(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  font-family: \\\"Plus Jakarta Sans\\\", sans-serif;\\n  font-weight: 600;\\n  font-size: 18px;\\n  color: #2395e9;\\n  text-align: center;\\n  margin-bottom: 10px;\\n\"])));const QuestionCard=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background-color: #121c2b;\\n  border-radius: 22px;\\n  padding: 40px 50px;\\n  width: 100%;\\n  max-width: 800px;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  text-align: center;\\n\"])));const QuestionText=styled.p(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  font-family: \\\"Plus Jakarta Sans\\\", sans-serif;\\n  font-weight: 500;\\n  font-size: 15px;\\n  color: #d7dfe5;\\n  line-height: 1.33;\\n  max-width: 600px;\\n\"])));const ButtonGroup=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  align-items: center;\\n  gap: 12px;\\n  padding: 12px 0;\\n  width: 100%;\\n  max-width: 600px;\\n\"])));const AnswerButton=styled.button(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  font-family: \\\"Plus Jakarta Sans\\\", sans-serif;\\n  font-weight: 500;\\n  font-size: 15px;\\n  color: #d7dfe5;\\n  padding: 8px 16px;\\n  background-color: transparent;\\n  border: 1.5px solid rgba(214, 224, 230, 0.2);\\n  border-radius: 12px;\\n  cursor: pointer;\\n  transition: all 0.2s ease;\\n\\n  &:hover {\\n    background-color: rgba(35, 149, 233, 0.4);\\n  }\\n\\n  &.selected {\\n    background-color: rgba(35, 149, 233, 0.7);\\n  }\\n\\n  &.correct {\\n    background-color: rgba(46, 204, 113, 0.7);\\n  }\\n\\n  &.incorrect {\\n    background-color: rgba(231, 76, 60, 0.7);\\n  }\\n\"])));const SkipButton=styled.button(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  font-family: \\\"Plus Jakarta Sans\\\", sans-serif;\\n  font-weight: 500;\\n  font-size: 15px;\\n  color: #fafdff;\\n  background: none;\\n  border: none;\\n  cursor: pointer;\\n  padding: 8px 16px;\\n\\n  &:hover {\\n    text-decoration: underline;\\n  }\\n\"])));const NextButton=styled.button(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  font-family: \\\"Plus Jakarta Sans\\\", sans-serif;\\n  font-weight: 500;\\n  font-size: 15px;\\n  color: #000000;\\n  background-color: #2395e9;\\n  border: none;\\n  border-radius: 22px;\\n  padding: 8px 16px;\\n  cursor: pointer;\\n  margin-top: 12px;\\n\\n  &:hover {\\n    background-color: #1b7ac2;\\n  }\\n\"])));const ResultContainer=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  background-color: #121c2b;\\n  border-radius: 22px;\\n  padding: 30px;\\n  width: 100%;\\n  max-width: 800px;\\n  margin-top: 20px;\\n\"])));const ResultText=styled.p(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-size: 16px;\\n  line-height: 1.5;\\n  color: #d7dfe5;\\n  margin-bottom: 10px;\\n\"])));const ExplanationText=styled.p(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  font-family: \\\"IBM Plex Sans\\\", sans-serif;\\n  font-size: 15px;\\n  line-height: 1.5;\\n  color: #a7b7c2;\\n  font-style: italic;\\n  padding-left: 16px;\\n  border-left: 3px solid #2395e9;\\n  margin-top: 16px;\\n\"])));const Quiz=_ref=>{let{quizData,onComplete}=_ref;const[availableQuestions,setAvailableQuestions]=useState([]);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[selectedAnswer,setSelectedAnswer]=useState(null);const[showResult,setShowResult]=useState(false);const[score,setScore]=useState(0);const[answeredQuestions,setAnsweredQuestions]=useState([]);const[userAnswers,setUserAnswers]=useState(Array(quizData.length).fill(null));// 초기 랜덤 문제 목록 생성\nuseEffect(()=>{const shuffleQuestions=()=>{// 문제 인덱스를 배열로 만들고 섞기\nconst indices=[...Array(quizData.length).keys()];for(let i=indices.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));[indices[i],indices[j]]=[indices[j],indices[i]];}setAvailableQuestions(indices);};shuffleQuestions();},[quizData.length]);const getCurrentQuestion=()=>{if(availableQuestions.length===0)return null;const questionId=availableQuestions[currentQuestionIndex];return quizData[questionId];};const handleAnswerClick=answer=>{if(showResult)return;const currentQuestion=getCurrentQuestion();if(!currentQuestion)return;const questionId=availableQuestions[currentQuestionIndex];setSelectedAnswer(answer);setShowResult(true);const newUserAnswers=[...userAnswers];newUserAnswers[questionId]=answer;setUserAnswers(newUserAnswers);if(answer===currentQuestion.correctAnswer){setScore(score+1);}setAnsweredQuestions([...answeredQuestions,questionId]);};const handleNextClick=()=>{setShowResult(false);setSelectedAnswer(null);// 현재 문제를 사용 가능한 문제 목록에서 제거\nconst updatedQuestions=[...availableQuestions];updatedQuestions.splice(currentQuestionIndex,1);setAvailableQuestions(updatedQuestions);// 다음 문제 인덱스 설정 (랜덤)\nif(updatedQuestions.length>0){const nextIndex=Math.floor(Math.random()*updatedQuestions.length);setCurrentQuestionIndex(nextIndex);}else{// 모든 문제를 다 풀었을 때\nonComplete(score,userAnswers);}};const handleSkipClick=()=>{if(availableQuestions.length<=1)return;// 현재 문제를 건너뛰고 다른 랜덤 문제 선택\nlet nextIndex;do{nextIndex=Math.floor(Math.random()*availableQuestions.length);}while(nextIndex===currentQuestionIndex&&availableQuestions.length>1);setCurrentQuestionIndex(nextIndex);setShowResult(false);setSelectedAnswer(null);};const currentQuestion=getCurrentQuestion();if(!currentQuestion){return/*#__PURE__*/_jsx(QuizContainer,{children:/*#__PURE__*/_jsx(NextButton,{onClick:()=>onComplete(score,userAnswers),children:\"\\uACB0\\uACFC \\uBCF4\\uAE30\"})});}return/*#__PURE__*/_jsxs(QuizContainer,{children:[/*#__PURE__*/_jsxs(CategoryText,{children:[\"\\uC8FC\\uC81C: \",currentQuestion.category]}),/*#__PURE__*/_jsx(QuestionCard,{children:/*#__PURE__*/_jsx(QuestionText,{children:currentQuestion.question})}),/*#__PURE__*/_jsxs(ButtonGroup,{children:[/*#__PURE__*/_jsx(AnswerButton,{className:showResult?currentQuestion.correctAnswer===\"O\"?\"correct\":selectedAnswer===\"O\"?\"incorrect\":\"\":selectedAnswer===\"O\"?\"selected\":\"\",onClick:()=>handleAnswerClick(\"O\"),children:\"O\"}),/*#__PURE__*/_jsx(AnswerButton,{className:showResult?currentQuestion.correctAnswer===\"X\"?\"correct\":selectedAnswer===\"X\"?\"incorrect\":\"\":selectedAnswer===\"X\"?\"selected\":\"\",onClick:()=>handleAnswerClick(\"X\"),children:\"X\"})]}),!showResult&&availableQuestions.length>1&&/*#__PURE__*/_jsx(SkipButton,{onClick:handleSkipClick,children:\"Skip\"}),showResult&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ResultContainer,{children:[/*#__PURE__*/_jsxs(ResultText,{children:[\"\\uC815\\uB2F5: \",currentQuestion.correctAnswer]}),/*#__PURE__*/_jsx(ExplanationText,{children:currentQuestion.explanation})]}),/*#__PURE__*/_jsx(NextButton,{onClick:handleNextClick,children:availableQuestions.length>1?\"다음 문제\":\"결과 보기\"})]})]});};export default Quiz;","map":{"version":3,"names":["React","useState","useEffect","styled","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","QuizContainer","div","_templateObject","_taggedTemplateLiteral","CategoryText","p","_templateObject2","QuestionCard","_templateObject3","QuestionText","_templateObject4","ButtonGroup","_templateObject5","AnswerButton","button","_templateObject6","SkipButton","_templateObject7","NextButton","_templateObject8","ResultContainer","_templateObject9","ResultText","_templateObject0","ExplanationText","_templateObject1","Quiz","_ref","quizData","onComplete","availableQuestions","setAvailableQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswer","setSelectedAnswer","showResult","setShowResult","score","setScore","answeredQuestions","setAnsweredQuestions","userAnswers","setUserAnswers","Array","length","fill","shuffleQuestions","indices","keys","i","j","Math","floor","random","getCurrentQuestion","questionId","handleAnswerClick","answer","currentQuestion","newUserAnswers","correctAnswer","handleNextClick","updatedQuestions","splice","nextIndex","handleSkipClick","children","onClick","category","question","className","explanation"],"sources":["/Users/jun/Desktop/sqld_study/src/components/quiz/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nconst QuizContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  width: 100%;\n  height: calc(100vh - 140px); /* 헤더와 패딩을 고려한 높이 */\n  overflow: hidden;\n`;\n\nconst CategoryText = styled.p`\n  font-family: \"Plus Jakarta Sans\", sans-serif;\n  font-weight: 600;\n  font-size: 18px;\n  color: #2395e9;\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nconst QuestionCard = styled.div`\n  background-color: #121c2b;\n  border-radius: 22px;\n  padding: 40px 50px;\n  width: 100%;\n  max-width: 800px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n`;\n\nconst QuestionText = styled.p`\n  font-family: \"Plus Jakarta Sans\", sans-serif;\n  font-weight: 500;\n  font-size: 15px;\n  color: #d7dfe5;\n  line-height: 1.33;\n  max-width: 600px;\n`;\n\nconst ButtonGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  padding: 12px 0;\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst AnswerButton = styled.button`\n  font-family: \"Plus Jakarta Sans\", sans-serif;\n  font-weight: 500;\n  font-size: 15px;\n  color: #d7dfe5;\n  padding: 8px 16px;\n  background-color: transparent;\n  border: 1.5px solid rgba(214, 224, 230, 0.2);\n  border-radius: 12px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    background-color: rgba(35, 149, 233, 0.4);\n  }\n\n  &.selected {\n    background-color: rgba(35, 149, 233, 0.7);\n  }\n\n  &.correct {\n    background-color: rgba(46, 204, 113, 0.7);\n  }\n\n  &.incorrect {\n    background-color: rgba(231, 76, 60, 0.7);\n  }\n`;\n\nconst SkipButton = styled.button`\n  font-family: \"Plus Jakarta Sans\", sans-serif;\n  font-weight: 500;\n  font-size: 15px;\n  color: #fafdff;\n  background: none;\n  border: none;\n  cursor: pointer;\n  padding: 8px 16px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst NextButton = styled.button`\n  font-family: \"Plus Jakarta Sans\", sans-serif;\n  font-weight: 500;\n  font-size: 15px;\n  color: #000000;\n  background-color: #2395e9;\n  border: none;\n  border-radius: 22px;\n  padding: 8px 16px;\n  cursor: pointer;\n  margin-top: 12px;\n\n  &:hover {\n    background-color: #1b7ac2;\n  }\n`;\n\nconst ResultContainer = styled.div`\n  background-color: #121c2b;\n  border-radius: 22px;\n  padding: 30px;\n  width: 100%;\n  max-width: 800px;\n  margin-top: 20px;\n`;\n\nconst ResultText = styled.p`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-size: 16px;\n  line-height: 1.5;\n  color: #d7dfe5;\n  margin-bottom: 10px;\n`;\n\nconst ExplanationText = styled.p`\n  font-family: \"IBM Plex Sans\", sans-serif;\n  font-size: 15px;\n  line-height: 1.5;\n  color: #a7b7c2;\n  font-style: italic;\n  padding-left: 16px;\n  border-left: 3px solid #2395e9;\n  margin-top: 16px;\n`;\n\nconst Quiz = ({ quizData, onComplete }) => {\n  const [availableQuestions, setAvailableQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [showResult, setShowResult] = useState(false);\n  const [score, setScore] = useState(0);\n  const [answeredQuestions, setAnsweredQuestions] = useState([]);\n  const [userAnswers, setUserAnswers] = useState(\n    Array(quizData.length).fill(null)\n  );\n\n  // 초기 랜덤 문제 목록 생성\n  useEffect(() => {\n    const shuffleQuestions = () => {\n      // 문제 인덱스를 배열로 만들고 섞기\n      const indices = [...Array(quizData.length).keys()];\n      for (let i = indices.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [indices[i], indices[j]] = [indices[j], indices[i]];\n      }\n      setAvailableQuestions(indices);\n    };\n\n    shuffleQuestions();\n  }, [quizData.length]);\n\n  const getCurrentQuestion = () => {\n    if (availableQuestions.length === 0) return null;\n    const questionId = availableQuestions[currentQuestionIndex];\n    return quizData[questionId];\n  };\n\n  const handleAnswerClick = (answer) => {\n    if (showResult) return;\n\n    const currentQuestion = getCurrentQuestion();\n    if (!currentQuestion) return;\n\n    const questionId = availableQuestions[currentQuestionIndex];\n\n    setSelectedAnswer(answer);\n    setShowResult(true);\n\n    const newUserAnswers = [...userAnswers];\n    newUserAnswers[questionId] = answer;\n    setUserAnswers(newUserAnswers);\n\n    if (answer === currentQuestion.correctAnswer) {\n      setScore(score + 1);\n    }\n\n    setAnsweredQuestions([...answeredQuestions, questionId]);\n  };\n\n  const handleNextClick = () => {\n    setShowResult(false);\n    setSelectedAnswer(null);\n\n    // 현재 문제를 사용 가능한 문제 목록에서 제거\n    const updatedQuestions = [...availableQuestions];\n    updatedQuestions.splice(currentQuestionIndex, 1);\n    setAvailableQuestions(updatedQuestions);\n\n    // 다음 문제 인덱스 설정 (랜덤)\n    if (updatedQuestions.length > 0) {\n      const nextIndex = Math.floor(Math.random() * updatedQuestions.length);\n      setCurrentQuestionIndex(nextIndex);\n    } else {\n      // 모든 문제를 다 풀었을 때\n      onComplete(score, userAnswers);\n    }\n  };\n\n  const handleSkipClick = () => {\n    if (availableQuestions.length <= 1) return;\n\n    // 현재 문제를 건너뛰고 다른 랜덤 문제 선택\n    let nextIndex;\n    do {\n      nextIndex = Math.floor(Math.random() * availableQuestions.length);\n    } while (\n      nextIndex === currentQuestionIndex &&\n      availableQuestions.length > 1\n    );\n\n    setCurrentQuestionIndex(nextIndex);\n    setShowResult(false);\n    setSelectedAnswer(null);\n  };\n\n  const currentQuestion = getCurrentQuestion();\n  if (!currentQuestion) {\n    return (\n      <QuizContainer>\n        <NextButton onClick={() => onComplete(score, userAnswers)}>\n          결과 보기\n        </NextButton>\n      </QuizContainer>\n    );\n  }\n\n  return (\n    <QuizContainer>\n      <CategoryText>주제: {currentQuestion.category}</CategoryText>\n\n      <QuestionCard>\n        <QuestionText>{currentQuestion.question}</QuestionText>\n      </QuestionCard>\n\n      <ButtonGroup>\n        <AnswerButton\n          className={\n            showResult\n              ? currentQuestion.correctAnswer === \"O\"\n                ? \"correct\"\n                : selectedAnswer === \"O\"\n                ? \"incorrect\"\n                : \"\"\n              : selectedAnswer === \"O\"\n              ? \"selected\"\n              : \"\"\n          }\n          onClick={() => handleAnswerClick(\"O\")}\n        >\n          O\n        </AnswerButton>\n\n        <AnswerButton\n          className={\n            showResult\n              ? currentQuestion.correctAnswer === \"X\"\n                ? \"correct\"\n                : selectedAnswer === \"X\"\n                ? \"incorrect\"\n                : \"\"\n              : selectedAnswer === \"X\"\n              ? \"selected\"\n              : \"\"\n          }\n          onClick={() => handleAnswerClick(\"X\")}\n        >\n          X\n        </AnswerButton>\n      </ButtonGroup>\n\n      {!showResult && availableQuestions.length > 1 && (\n        <SkipButton onClick={handleSkipClick}>Skip</SkipButton>\n      )}\n\n      {showResult && (\n        <>\n          <ResultContainer>\n            <ResultText>정답: {currentQuestion.correctAnswer}</ResultText>\n            <ExplanationText>{currentQuestion.explanation}</ExplanationText>\n          </ResultContainer>\n          <NextButton onClick={handleNextClick}>\n            {availableQuestions.length > 1 ? \"다음 문제\" : \"결과 보기\"}\n          </NextButton>\n        </>\n      )}\n    </QuizContainer>\n  );\n};\n\nexport default Quiz;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}